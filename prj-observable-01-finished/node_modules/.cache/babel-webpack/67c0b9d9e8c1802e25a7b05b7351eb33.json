{"ast":null,"code":"import _assertThisInitialized from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period) {\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : async;\n  return function (source) {\n    return source.lift(new SampleTimeOperator(period, scheduler));\n  };\n}\n\nvar SampleTimeOperator = /*#__PURE__*/function () {\n  function SampleTimeOperator(period, scheduler) {\n    _classCallCheck(this, SampleTimeOperator);\n\n    this.period = period;\n    this.scheduler = scheduler;\n  }\n\n  _createClass(SampleTimeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n  }]);\n\n  return SampleTimeOperator;\n}();\n\nvar SampleTimeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SampleTimeSubscriber, _Subscriber);\n\n  var _super = _createSuper(SampleTimeSubscriber);\n\n  function SampleTimeSubscriber(destination, period, scheduler) {\n    var _this;\n\n    _classCallCheck(this, SampleTimeSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.period = period;\n    _this.scheduler = scheduler;\n    _this.hasValue = false;\n\n    _this.add(scheduler.schedule(dispatchNotification, period, {\n      subscriber: _assertThisInitialized(_this),\n      period: period\n    }));\n\n    return _this;\n  }\n\n  _createClass(SampleTimeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      if (this.hasValue) {\n        this.hasValue = false;\n        this.destination.next(this.lastValue);\n      }\n    }\n  }]);\n\n  return SampleTimeSubscriber;\n}(Subscriber);\n\nfunction dispatchNotification(state) {\n  var subscriber = state.subscriber,\n      period = state.period;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/operators/sampleTime.ts"],"names":[],"mappings":";;;;;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,KAAT,QAAsB,oBAAtB;AA6CA,OAAM,SAAU,UAAV,CAAwB,MAAxB,EAAwE;EAAA,IAAhC,SAAgC,uEAAL,KAAK;EAC5E,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,kBAAJ,CAAuB,MAAvB,EAA+B,SAA/B,CAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,kB;EACJ,4BAAoB,MAApB,EACoB,SADpB,EAC4C;IAAA;;IADxB,KAAA,MAAA,GAAA,MAAA;IACA,KAAA,SAAA,GAAA,SAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,oBAAJ,CAAyB,UAAzB,EAAqC,KAAK,MAA1C,EAAkD,KAAK,SAAvD,CAAjB,CAAP;IACD;;;;;;IAQG,oB;;;;;EAIJ,8BAAY,WAAZ,EACoB,MADpB,EAEoB,SAFpB,EAE4C;IAAA;;IAAA;;IAC1C,0BAAM,WAAN;IAFkB,MAAA,MAAA,GAAA,MAAA;IACA,MAAA,SAAA,GAAA,SAAA;IAJpB,MAAA,QAAA,GAAoB,KAApB;;IAME,MAAK,GAAL,CAAS,SAAS,CAAC,QAAV,CAAmB,oBAAnB,EAAyC,MAAzC,EAAiD;MAAE,UAAU,+BAAZ;MAAoB,MAAM,EAAN;IAApB,CAAjD,CAAT;;IAF0C;EAG3C;;;;WAES,eAAM,KAAN,EAAc;MACtB,KAAK,SAAL,GAAiB,KAAjB;MACA,KAAK,QAAL,GAAgB,IAAhB;IACD;;;WAED,sBAAU;MACR,IAAI,KAAK,QAAT,EAAmB;QACjB,KAAK,QAAL,GAAgB,KAAhB;QACA,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,SAA3B;MACD;IACF;;;;EArBmC,U;;AAwBtC,SAAS,oBAAT,CAA6D,KAA7D,EAAuE;EACrE,IAAM,UAAN,GAA6B,KAA7B,CAAM,UAAN;EAAA,IAAkB,MAAlB,GAA6B,KAA7B,CAAkB,MAAlB;EACA,UAAU,CAAC,UAAX;EACA,KAAK,QAAL,CAAc,KAAd,EAAqB,MAArB;AACD","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map"]},"metadata":{},"sourceType":"module"}