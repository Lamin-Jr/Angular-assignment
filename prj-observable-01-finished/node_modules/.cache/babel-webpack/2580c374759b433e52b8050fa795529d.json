{"ast":null,"code":"import _toConsumableArray from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n  if (resultSelector) {\n    return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    var handler = function handler() {\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n\n      return subscriber.next(e.length === 1 ? e[0] : e);\n    };\n\n    var retValue;\n\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return function () {\n      return removeHandler(handler, retValue);\n    };\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromEventPattern.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,OAAT,QAAwB,iBAAxB;AACA,SAAS,UAAT,QAA2B,oBAA3B;AAEA,SAAS,GAAT,QAAoB,kBAApB;AAwIA,OAAM,SAAU,gBAAV,CAA8B,UAA9B,EAC8B,aAD9B,EAE8B,cAF9B,EAEoE;EAExE,IAAI,cAAJ,EAAoB;IAElB,OAAO,gBAAgB,CAAI,UAAJ,EAAgB,aAAhB,CAAhB,CAA+C,IAA/C,CACL,GAAG,CAAC,UAAA,IAAI;MAAA,OAAI,OAAO,CAAC,IAAD,CAAP,GAAgB,cAAc,MAAd,4BAAkB,IAAlB,EAAhB,GAA0C,cAAc,CAAC,IAAD,CAA5D;IAAA,CAAL,CADE,CAAP;EAGD;;EAED,OAAO,IAAI,UAAJ,CAAwB,UAAA,UAAU,EAAG;IAC1C,IAAM,OAAO,GAAG,SAAV,OAAU;MAAA,kCAAI,CAAJ;QAAI,CAAJ;MAAA;;MAAA,OAAe,UAAU,CAAC,IAAX,CAAgB,CAAC,CAAC,MAAF,KAAa,CAAb,GAAiB,CAAC,CAAC,CAAD,CAAlB,GAAwB,CAAxC,CAAf;IAAA,CAAhB;;IAEA,IAAI,QAAJ;;IACA,IAAI;MACF,QAAQ,GAAG,UAAU,CAAC,OAAD,CAArB;IACD,CAFD,CAEE,OAAO,GAAP,EAAY;MACZ,UAAU,CAAC,KAAX,CAAiB,GAAjB;MACA,OAAO,SAAP;IACD;;IAED,IAAI,CAAC,UAAU,CAAC,aAAD,CAAf,EAAgC;MAC9B,OAAO,SAAP;IACD;;IAED,OAAO;MAAA,OAAM,aAAa,CAAC,OAAD,EAAU,QAAV,CAAnB;IAAA,CAAP;EACD,CAhBM,CAAP;AAiBD","sourcesContent":["import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map"]},"metadata":{},"sourceType":"module"}