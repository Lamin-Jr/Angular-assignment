{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nvar ScanOperator = /*#__PURE__*/function () {\n  function ScanOperator(accumulator, seed) {\n    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ScanOperator);\n\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n\n  _createClass(ScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n  }]);\n\n  return ScanOperator;\n}();\n\nvar ScanSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ScanSubscriber, _Subscriber);\n\n  var _super = _createSuper(ScanSubscriber);\n\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this;\n\n    _classCallCheck(this, ScanSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(ScanSubscriber, [{\n    key: \"seed\",\n    get: function get() {\n      return this._seed;\n    },\n    set: function set(value) {\n      this.hasSeed = true;\n      this._seed = value;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSeed) {\n        this.seed = value;\n        this.destination.next(value);\n      } else {\n        return this._tryNext(value);\n      }\n    }\n  }, {\n    key: \"_tryNext\",\n    value: function _tryNext(value) {\n      var index = this.index++;\n      var result;\n\n      try {\n        result = this.accumulator(this.seed, value, index);\n      } catch (err) {\n        this.destination.error(err);\n      }\n\n      this.seed = result;\n      this.destination.next(result);\n    }\n  }]);\n\n  return ScanSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/scan.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAT,QAA2B,eAA3B;AAoDA,OAAM,SAAU,IAAV,CAAqB,WAArB,EAA0E,IAA1E,EAAsF;EAC1F,IAAI,OAAO,GAAG,KAAd;;EAMA,IAAI,SAAS,CAAC,MAAV,IAAoB,CAAxB,EAA2B;IACzB,OAAO,GAAG,IAAV;EACD;;EAED,OAAO,SAAS,oBAAT,CAA8B,MAA9B,EAAmD;IACxD,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,YAAJ,CAAiB,WAAjB,EAA8B,IAA9B,EAAoC,OAApC,CAAZ,CAAP;EACD,CAFD;AAGD;;IAEK,Y;EACJ,sBAAoB,WAApB,EAAiF,IAAjF,EAA+H;IAAA,IAAxB,OAAwB,uEAAL,KAAK;;IAAA;;IAA3G,KAAA,WAAA,GAAA,WAAA;IAA6D,KAAA,IAAA,GAAA,IAAA;IAAsB,KAAA,OAAA,GAAA,OAAA;EAA4B;;;;WAEnI,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,cAAJ,CAAmB,UAAnB,EAA+B,KAAK,WAApC,EAAiD,KAAK,IAAtD,EAA4D,KAAK,OAAjE,CAAjB,CAAP;IACD;;;;;;IAQG,c;;;;;EAYJ,wBAAY,WAAZ,EAAgD,WAAhD,EAA6G,KAA7G,EACoB,OADpB,EACoC;IAAA;;IAAA;;IAClC,0BAAM,WAAN;IAF8C,MAAA,WAAA,GAAA,WAAA;IAA6D,MAAA,KAAA,GAAA,KAAA;IACzF,MAAA,OAAA,GAAA,OAAA;IAZZ,MAAA,KAAA,GAAgB,CAAhB;IAY4B;EAEnC;;;;SAZD,eAAQ;MACN,OAAO,KAAK,KAAZ;IACD,C;SAED,aAAS,KAAT,EAAqB;MACnB,KAAK,OAAL,GAAe,IAAf;MACA,KAAK,KAAL,GAAa,KAAb;IACD;;;WAOS,eAAM,KAAN,EAAc;MACtB,IAAI,CAAC,KAAK,OAAV,EAAmB;QACjB,KAAK,IAAL,GAAY,KAAZ;QACA,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;MACD,CAHD,MAGO;QACL,OAAO,KAAK,QAAL,CAAc,KAAd,CAAP;MACD;IACF;;;WAEO,kBAAS,KAAT,EAAiB;MACvB,IAAM,KAAK,GAAG,KAAK,KAAL,EAAd;MACA,IAAI,MAAJ;;MACA,IAAI;QACF,MAAM,GAAG,KAAK,WAAL,CAAoB,KAAK,IAAzB,EAA+B,KAA/B,EAAsC,KAAtC,CAAT;MACD,CAFD,CAEE,OAAO,GAAP,EAAY;QACZ,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;MACD;;MACD,KAAK,IAAL,GAAY,MAAZ;MACA,KAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;IACD;;;;EApCgC,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map"]},"metadata":{},"sourceType":"module"}