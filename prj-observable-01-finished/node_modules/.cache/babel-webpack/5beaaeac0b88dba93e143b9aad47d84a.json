{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\n\nvar WindowOperator = /*#__PURE__*/function () {\n  function WindowOperator(closingSelector) {\n    _classCallCheck(this, WindowOperator);\n\n    this.closingSelector = closingSelector;\n  }\n\n  _createClass(WindowOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n  }]);\n\n  return WindowOperator;\n}();\n\nvar WindowSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(WindowSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(WindowSubscriber);\n\n  function WindowSubscriber(destination, closingSelector) {\n    var _this;\n\n    _classCallCheck(this, WindowSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    _this.closingSelector = closingSelector;\n\n    _this.openWindow();\n\n    return _this;\n  }\n\n  _createClass(WindowSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n      this.openWindow(innerSub);\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(error) {\n      this._error(error);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      this.openWindow(innerSub);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.window.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.window.error(err);\n      this.destination.error(err);\n      this.unsubscribeClosingNotification();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.window.complete();\n      this.destination.complete();\n      this.unsubscribeClosingNotification();\n    }\n  }, {\n    key: \"unsubscribeClosingNotification\",\n    value: function unsubscribeClosingNotification() {\n      if (this.closingNotification) {\n        this.closingNotification.unsubscribe();\n      }\n    }\n  }, {\n    key: \"openWindow\",\n    value: function openWindow() {\n      var innerSub = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (innerSub) {\n        this.remove(innerSub);\n        innerSub.unsubscribe();\n      }\n\n      var prevWindow = this.window;\n\n      if (prevWindow) {\n        prevWindow.complete();\n      }\n\n      var window = this.window = new Subject();\n      this.destination.next(window);\n      var closingNotifier;\n\n      try {\n        var closingSelector = this.closingSelector;\n        closingNotifier = closingSelector();\n      } catch (e) {\n        this.destination.error(e);\n        this.window.error(e);\n        return;\n      }\n\n      this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n  }]);\n\n  return WindowSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/windowWhen.ts"],"names":[],"mappings":";;;;AAGA,SAAS,OAAT,QAAwB,YAAxB;AAEA,SAAS,eAAT,QAAgC,oBAAhC;AAEA,SAAS,iBAAT,QAAkC,2BAAlC;AAgDA,OAAM,SAAU,UAAV,CAAwB,eAAxB,EAA8D;EAClE,OAAO,SAAS,0BAAT,CAAoC,MAApC,EAAyD;IAC9D,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAsB,eAAtB,CAAZ,CAAP;EACD,CAFD;AAGD;;IAEK,c;EACJ,wBAAoB,eAApB,EAA0D;IAAA;;IAAtC,KAAA,eAAA,GAAA,eAAA;EACnB;;;;WAED,cAAK,UAAL,EAA4C,MAA5C,EAAuD;MACrD,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,eAAtC,CAAjB,CAAP;IACD;;;;;;IAQG,gB;;;;;EAIJ,0BAAsB,WAAtB,EACoB,eADpB,EAC0D;IAAA;;IAAA;;IACxD,0BAAM,WAAN;IAFoB,MAAA,WAAA,GAAA,WAAA;IACF,MAAA,eAAA,GAAA,eAAA;;IAElB,MAAK,UAAL;;IAFwD;EAGzD;;;;WAED,oBAAW,WAAX,EAA2B,WAA3B,EACW,WADX,EACgC,WADhC,EAEW,QAFX,EAE4C;MAC1C,KAAK,UAAL,CAAgB,QAAhB;IACD;;;WAED,qBAAY,KAAZ,EAAsB;MACpB,KAAK,MAAL,CAAY,KAAZ;IACD;;;WAED,wBAAe,QAAf,EAAgD;MAC9C,KAAK,UAAL,CAAgB,QAAhB;IACD;;;WAES,eAAM,KAAN,EAAc;MACtB,KAAK,MAAL,CAAa,IAAb,CAAkB,KAAlB;IACD;;;WAES,gBAAO,GAAP,EAAe;MACvB,KAAK,MAAL,CAAa,KAAb,CAAmB,GAAnB;MACA,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;MACA,KAAK,8BAAL;IACD;;;WAES,qBAAS;MACjB,KAAK,MAAL,CAAa,QAAb;MACA,KAAK,WAAL,CAAiB,QAAjB;MACA,KAAK,8BAAL;IACD;;;WAEO,0CAA8B;MACpC,IAAI,KAAK,mBAAT,EAA8B;QAC5B,KAAK,mBAAL,CAAyB,WAAzB;MACD;IACF;;;WAEO,sBAA0D;MAAA,IAA/C,QAA+C,uEAAJ,IAAI;;MAChE,IAAI,QAAJ,EAAc;QACZ,KAAK,MAAL,CAAY,QAAZ;QACA,QAAQ,CAAC,WAAT;MACD;;MAED,IAAM,UAAU,GAAG,KAAK,MAAxB;;MACA,IAAI,UAAJ,EAAgB;QACd,UAAU,CAAC,QAAX;MACD;;MAED,IAAM,MAAM,GAAG,KAAK,MAAL,GAAc,IAAI,OAAJ,EAA7B;MACA,KAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;MAEA,IAAI,eAAJ;;MACA,IAAI;QACF,IAAQ,eAAR,GAA4B,IAA5B,CAAQ,eAAR;QACA,eAAe,GAAG,eAAe,EAAjC;MACD,CAHD,CAGE,OAAO,CAAP,EAAU;QACV,KAAK,WAAL,CAAiB,KAAjB,CAAuB,CAAvB;QACA,KAAK,MAAL,CAAY,KAAZ,CAAkB,CAAlB;QACA;MACD;;MACD,KAAK,GAAL,CAAS,KAAK,mBAAL,GAA2B,iBAAiB,CAAC,IAAD,EAAO,eAAP,CAArD;IACD;;;;EAtE+B,e","sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n}\n//# sourceMappingURL=windowWhen.js.map"]},"metadata":{},"sourceType":"module"}