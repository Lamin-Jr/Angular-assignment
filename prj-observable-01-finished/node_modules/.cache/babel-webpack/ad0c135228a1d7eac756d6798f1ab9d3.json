{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n  return function filterOperatorFunction(source) {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nvar FilterOperator = /*#__PURE__*/function () {\n  function FilterOperator(predicate, thisArg) {\n    _classCallCheck(this, FilterOperator);\n\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n  }\n\n  _createClass(FilterOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    }\n  }]);\n\n  return FilterOperator;\n}();\n\nvar FilterSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(FilterSubscriber, _Subscriber);\n\n  var _super = _createSuper(FilterSubscriber);\n\n  function FilterSubscriber(destination, predicate, thisArg) {\n    var _this;\n\n    _classCallCheck(this, FilterSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.thisArg = thisArg;\n    _this.count = 0;\n    return _this;\n  }\n\n  _createClass(FilterSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var result;\n\n      try {\n        result = this.predicate.call(this.thisArg, value, this.count++);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      if (result) {\n        this.destination.next(value);\n      }\n    }\n  }]);\n\n  return FilterSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/filter.ts"],"names":[],"mappings":";;;;AACA,SAAS,UAAT,QAA2B,eAA3B;AAwDA,OAAM,SAAU,MAAV,CAAoB,SAApB,EACoB,OADpB,EACiC;EACrC,OAAO,SAAS,sBAAT,CAAgC,MAAhC,EAAqD;IAC1D,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,OAA9B,CAAZ,CAAP;EACD,CAFD;AAGD;;IAEK,c;EACJ,wBAAoB,SAApB,EACoB,OADpB,EACiC;IAAA;;IADb,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,OAAA,GAAA,OAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,SAAtC,EAAiD,KAAK,OAAtD,CAAjB,CAAP;IACD;;;;;;IAQG,gB;;;;;EAIJ,0BAAY,WAAZ,EACoB,SADpB,EAEoB,OAFpB,EAEgC;IAAA;;IAAA;;IAC9B,0BAAM,WAAN;IAFkB,MAAA,SAAA,GAAA,SAAA;IACA,MAAA,OAAA,GAAA,OAAA;IAJpB,MAAA,KAAA,GAAgB,CAAhB;IAIgC;EAE/B;;;;WAIS,eAAM,KAAN,EAAc;MACtB,IAAI,MAAJ;;MACA,IAAI;QACF,MAAM,GAAG,KAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,OAAzB,EAAkC,KAAlC,EAAyC,KAAK,KAAL,EAAzC,CAAT;MACD,CAFD,CAEE,OAAO,GAAP,EAAY;QACZ,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;QACA;MACD;;MACD,IAAI,MAAJ,EAAY;QACV,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;MACD;IACF;;;;EAvB+B,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nclass FilterOperator {\n    constructor(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    }\n}\nclass FilterSubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    _next(value) {\n        let result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=filter.js.map"]},"metadata":{},"sourceType":"module"}