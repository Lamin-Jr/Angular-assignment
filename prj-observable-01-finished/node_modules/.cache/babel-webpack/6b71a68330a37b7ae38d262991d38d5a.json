{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext() {\n  for (var _len = arguments.length, nextSources = new Array(_len), _key = 0; _key < _len; _key++) {\n    nextSources[_key] = arguments[_key];\n  }\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n\n  return function (source) {\n    return source.lift(new OnErrorResumeNextOperator(nextSources));\n  };\n}\nexport function onErrorResumeNextStatic() {\n  for (var _len2 = arguments.length, nextSources = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    nextSources[_key2] = arguments[_key2];\n  }\n\n  var source = undefined;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n\n  source = nextSources.shift();\n  return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\n\nvar OnErrorResumeNextOperator = /*#__PURE__*/function () {\n  function OnErrorResumeNextOperator(nextSources) {\n    _classCallCheck(this, OnErrorResumeNextOperator);\n\n    this.nextSources = nextSources;\n  }\n\n  _createClass(OnErrorResumeNextOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n  }]);\n\n  return OnErrorResumeNextOperator;\n}();\n\nvar OnErrorResumeNextSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(OnErrorResumeNextSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(OnErrorResumeNextSubscriber);\n\n  function OnErrorResumeNextSubscriber(destination, nextSources) {\n    var _this;\n\n    _classCallCheck(this, OnErrorResumeNextSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    _this.nextSources = nextSources;\n    return _this;\n  }\n\n  _createClass(OnErrorResumeNextSubscriber, [{\n    key: \"notifyError\",\n    value: function notifyError() {\n      this.subscribeToNextSource();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.subscribeToNextSource();\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.subscribeToNextSource();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.subscribeToNextSource();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"subscribeToNextSource\",\n    value: function subscribeToNextSource() {\n      var next = this.nextSources.shift();\n\n      if (!!next) {\n        var innerSubscriber = new SimpleInnerSubscriber(this);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        var innerSubscription = innerSubscribe(next, innerSubscriber);\n\n        if (innerSubscription !== innerSubscriber) {\n          destination.add(innerSubscription);\n        }\n      } else {\n        this.destination.complete();\n      }\n    }\n  }]);\n\n  return OnErrorResumeNextSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/onErrorResumeNext.ts"],"names":[],"mappings":";;;;AACA,SAAS,IAAT,QAAqB,oBAArB;AAIA,SAAS,OAAT,QAAwB,iBAAxB;AAEA,SAAS,qBAAT,EAAgC,qBAAhC,EAAuD,cAAvD,QAA6E,mBAA7E;AAmFA,OAAM,SAAU,iBAAV,GAC6E;EAAA,kCADxC,WACwC;IADxC,WACwC;EAAA;;EACjF,IAAI,WAAW,CAAC,MAAZ,KAAuB,CAAvB,IAA4B,OAAO,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAvC,EAAyD;IACvD,WAAW,GAA2B,WAAW,CAAC,CAAD,CAAjD;EACD;;EAED,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,yBAAJ,CAAoC,WAApC,CAAZ,CAA3B;EAAA,CAAP;AACD;AAaD,OAAM,SAAU,uBAAV,GAE2B;EAAA,mCAFgB,WAEhB;IAFgB,WAEhB;EAAA;;EAC/B,IAAI,MAAM,GAAmC,SAA7C;;EAEA,IAAI,WAAW,CAAC,MAAZ,KAAuB,CAAvB,IAA4B,OAAO,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAvC,EAAyD;IACvD,WAAW,GAAG,WAAW,CAAC,CAAD,CAAzB;EACD;;EAED,MAAM,GAAG,WAAW,CAAC,KAAZ,EAAT;EAEA,OAAO,IAAI,CAAC,MAAD,CAAJ,CAAa,IAAb,CAAkB,IAAI,yBAAJ,CAAoC,WAApC,CAAlB,CAAP;AACD;;IAEK,yB;EACJ,mCAAoB,WAApB,EAA4D;IAAA;;IAAxC,KAAA,WAAA,GAAA,WAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,2BAAJ,CAAgC,UAAhC,EAA4C,KAAK,WAAjD,CAAjB,CAAP;IACD;;;;;;IAGG,2B;;;;;EACJ,qCAAsB,WAAtB,EACoB,WADpB,EAC4D;IAAA;;IAAA;;IAC1D,0BAAM,WAAN;IAFoB,MAAA,WAAA,GAAA,WAAA;IACF,MAAA,WAAA,GAAA,WAAA;IAAwC;EAE3D;;;;WAED,uBAAW;MACT,KAAK,qBAAL;IACD;;;WAED,0BAAc;MACZ,KAAK,qBAAL;IACD;;;WAES,gBAAO,GAAP,EAAe;MACvB,KAAK,qBAAL;MACA,KAAK,WAAL;IACD;;;WAES,qBAAS;MACjB,KAAK,qBAAL;MACA,KAAK,WAAL;IACD;;;WAEO,iCAAqB;MAC3B,IAAM,IAAI,GAAG,KAAK,WAAL,CAAiB,KAAjB,EAAb;;MACA,IAAI,CAAC,CAAC,IAAN,EAAY;QACV,IAAM,eAAe,GAAG,IAAI,qBAAJ,CAA0B,IAA1B,CAAxB;QACA,IAAM,WAAW,GAAG,KAAK,WAAzB;QACA,WAAW,CAAC,GAAZ,CAAgB,eAAhB;QACA,IAAM,iBAAiB,GAAG,cAAc,CAAC,IAAD,EAAO,eAAP,CAAxC;;QAIA,IAAI,iBAAiB,KAAK,eAA1B,EAA2C;UACzC,WAAW,CAAC,GAAZ,CAAgB,iBAAhB;QACD;MACF,CAXD,MAWO;QACL,KAAK,WAAL,CAAiB,QAAjB;MACD;IACF;;;;EAxC6C,qB","sourcesContent":["import { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext(...nextSources) {\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return (source) => source.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexport function onErrorResumeNextStatic(...nextSources) {\n    let source = undefined;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nclass OnErrorResumeNextOperator {\n    constructor(nextSources) {\n        this.nextSources = nextSources;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n}\nclass OnErrorResumeNextSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, nextSources) {\n        super(destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    notifyError() {\n        this.subscribeToNextSource();\n    }\n    notifyComplete() {\n        this.subscribeToNextSource();\n    }\n    _error(err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    _complete() {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    subscribeToNextSource() {\n        const next = this.nextSources.shift();\n        if (!!next) {\n            const innerSubscriber = new SimpleInnerSubscriber(this);\n            const destination = this.destination;\n            destination.add(innerSubscriber);\n            const innerSubscription = innerSubscribe(next, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                destination.add(innerSubscription);\n            }\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=onErrorResumeNext.js.map"]},"metadata":{},"sourceType":"module"}