{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n\n  return function (source) {\n    return source.lift(new FindValueOperator(predicate, source, false, thisArg));\n  };\n}\nexport var FindValueOperator = /*#__PURE__*/function () {\n  function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n    _classCallCheck(this, FindValueOperator);\n\n    this.predicate = predicate;\n    this.source = source;\n    this.yieldIndex = yieldIndex;\n    this.thisArg = thisArg;\n  }\n\n  _createClass(FindValueOperator, [{\n    key: \"call\",\n    value: function call(observer, source) {\n      return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n  }]);\n\n  return FindValueOperator;\n}();\nexport var FindValueSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(FindValueSubscriber, _Subscriber);\n\n  var _super = _createSuper(FindValueSubscriber);\n\n  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n    var _this;\n\n    _classCallCheck(this, FindValueSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.yieldIndex = yieldIndex;\n    _this.thisArg = thisArg;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(FindValueSubscriber, [{\n    key: \"notifyComplete\",\n    value: function notifyComplete(value) {\n      var destination = this.destination;\n      destination.next(value);\n      destination.complete();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var predicate = this.predicate,\n          thisArg = this.thisArg;\n      var index = this.index++;\n\n      try {\n        var result = predicate.call(thisArg || this, value, index, this.source);\n\n        if (result) {\n          this.notifyComplete(this.yieldIndex ? index : value);\n        }\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n  }]);\n\n  return FindValueSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/find.ts"],"names":[],"mappings":";;;;AAEA,SAAQ,UAAR,QAAyB,eAAzB;AA8CA,OAAM,SAAU,IAAV,CAAkB,SAAlB,EACkB,OADlB,EAC+B;EACnC,IAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;IACnC,MAAM,IAAI,SAAJ,CAAc,6BAAd,CAAN;EACD;;EACD,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,SAAtB,EAAiC,MAAjC,EAAyC,KAAzC,EAAgD,OAAhD,CAAZ,CAA3B;EAAA,CAAP;AACD;AAED,WAAa,iBAAb;EACE,2BAAoB,SAApB,EACoB,MADpB,EAEoB,UAFpB,EAGoB,OAHpB,EAGiC;IAAA;;IAHb,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,MAAA,GAAA,MAAA;IACA,KAAA,UAAA,GAAA,UAAA;IACA,KAAA,OAAA,GAAA,OAAA;EACnB;;EALH;IAAA;IAAA,OAOE,cAAK,QAAL,EAA8B,MAA9B,EAAyC;MACvC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,KAAK,SAAvC,EAAkD,KAAK,MAAvD,EAA+D,KAAK,UAApE,EAAgF,KAAK,OAArF,CAAjB,CAAP;IACD;EATH;;EAAA;AAAA;AAiBA,WAAa,mBAAb;EAAA;;EAAA;;EAGE,6BAAY,WAAZ,EACoB,SADpB,EAEoB,MAFpB,EAGoB,UAHpB,EAIoB,OAJpB,EAIiC;IAAA;;IAAA;;IAC/B,0BAAM,WAAN;IAJkB,MAAA,SAAA,GAAA,SAAA;IACA,MAAA,MAAA,GAAA,MAAA;IACA,MAAA,UAAA,GAAA,UAAA;IACA,MAAA,OAAA,GAAA,OAAA;IANZ,MAAA,KAAA,GAAgB,CAAhB;IAMyB;EAEhC;;EATH;IAAA;IAAA,OAWU,wBAAe,KAAf,EAAyB;MAC/B,IAAM,WAAW,GAAG,KAAK,WAAzB;MAEA,WAAW,CAAC,IAAZ,CAAiB,KAAjB;MACA,WAAW,CAAC,QAAZ;MACA,KAAK,WAAL;IACD;EAjBH;IAAA;IAAA,OAmBY,eAAM,KAAN,EAAc;MACtB,IAAO,SAAP,GAA6B,IAA7B,CAAO,SAAP;MAAA,IAAkB,OAAlB,GAA6B,IAA7B,CAAkB,OAAlB;MACA,IAAM,KAAK,GAAG,KAAK,KAAL,EAAd;;MACA,IAAI;QACF,IAAM,MAAM,GAAG,SAAS,CAAC,IAAV,CAAe,OAAO,IAAI,IAA1B,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,KAAK,MAAnD,CAAf;;QACA,IAAI,MAAJ,EAAY;UACV,KAAK,cAAL,CAAoB,KAAK,UAAL,GAAkB,KAAlB,GAA0B,KAA9C;QACD;MACF,CALD,CAKE,OAAO,GAAP,EAAY;QACZ,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;MACD;IACF;EA9BH;IAAA;IAAA,OAgCY,qBAAS;MACjB,KAAK,cAAL,CAAoB,KAAK,UAAL,GAAkB,CAAC,CAAnB,GAAuB,SAA3C;IACD;EAlCH;;EAAA;AAAA,EAA4C,UAA5C","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return (source) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\nexport class FindValueOperator {\n    constructor(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    call(observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n}\nexport class FindValueSubscriber extends Subscriber {\n    constructor(destination, predicate, source, yieldIndex, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    notifyComplete(value) {\n        const destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    }\n    _next(value) {\n        const { predicate, thisArg } = this;\n        const index = this.index++;\n        try {\n            const result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n}\n//# sourceMappingURL=find.js.map"]},"metadata":{},"sourceType":"module"}