{"ast":null,"code":"import _toConsumableArray from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext() {\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  var first = sources[0],\n      remainder = sources.slice(1);\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext.apply(void 0, _toConsumableArray(first));\n  }\n\n  return new Observable(function (subscriber) {\n    var subNext = function subNext() {\n      return subscriber.add(onErrorResumeNext.apply(void 0, _toConsumableArray(remainder)).subscribe(subscriber));\n    };\n\n    return from(first).subscribe({\n      next: function next(value) {\n        subscriber.next(value);\n      },\n      error: subNext,\n      complete: subNext\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/onErrorResumeNext.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,OAAT,QAAwB,iBAAxB;AACA,SAAS,KAAT,QAAsB,SAAtB;AAwEA,OAAM,SAAU,iBAAV,GAEuF;EAAA,kCAFlD,OAEkD;IAFlD,OAEkD;EAAA;;EAE3F,IAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;IACxB,OAAO,KAAP;EACD;;EAED,IAAQ,KAAR,GAAgC,OAAhC;EAAA,IAAkB,SAAlB,GAAgC,OAAhC;;EAEA,IAAI,OAAO,CAAC,MAAR,KAAmB,CAAnB,IAAwB,OAAO,CAAC,KAAD,CAAnC,EAA4C;IAC1C,OAAO,iBAAiB,MAAjB,4BAAqB,KAArB,EAAP;EACD;;EAED,OAAO,IAAI,UAAJ,CAAe,UAAA,UAAU,EAAG;IACjC,IAAM,OAAO,GAAG,SAAV,OAAU;MAAA,OAAM,UAAU,CAAC,GAAX,CACpB,iBAAiB,MAAjB,4BAAqB,SAArB,GAAgC,SAAhC,CAA0C,UAA1C,CADoB,CAAN;IAAA,CAAhB;;IAIA,OAAO,IAAI,CAAC,KAAD,CAAJ,CAAY,SAAZ,CAAsB;MAC3B,IAD2B,gBACtB,KADsB,EACjB;QAAI,UAAU,CAAC,IAAX,CAAgB,KAAhB;MAAyB,CADZ;MAE3B,KAAK,EAAE,OAFoB;MAG3B,QAAQ,EAAE;IAHiB,CAAtB,CAAP;EAKD,CAVM,CAAP;AAWD","sourcesContent":["import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map"]},"metadata":{},"sourceType":"module"}