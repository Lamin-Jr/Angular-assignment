{"ast":null,"code":"import _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AnimationFrameScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(AnimationFrameScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(AnimationFrameScheduler);\n\n  function AnimationFrameScheduler() {\n    _classCallCheck(this, AnimationFrameScheduler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AnimationFrameScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this.active = true;\n      this.scheduled = undefined;\n      var actions = this.actions;\n      var error;\n      var index = -1;\n      var count = actions.length;\n      action = action || actions.shift();\n\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while (++index < count && (action = actions.shift()));\n\n      this.active = false;\n\n      if (error) {\n        while (++index < count && (action = actions.shift())) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return AnimationFrameScheduler;\n}(AsyncScheduler);","map":{"version":3,"sources":["../../../src/internal/scheduler/AnimationFrameScheduler.ts"],"names":[],"mappings":";;;;AACA,SAAS,cAAT,QAA+B,kBAA/B;AAEA,WAAa,uBAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OACS,eAAM,MAAN,EAA+B;MAEpC,KAAK,MAAL,GAAc,IAAd;MACA,KAAK,SAAL,GAAiB,SAAjB;MAEA,IAAO,OAAP,GAAkB,IAAlB,CAAO,OAAP;MACA,IAAI,KAAJ;MACA,IAAI,KAAK,GAAW,CAAC,CAArB;MACA,IAAI,KAAK,GAAW,OAAO,CAAC,MAA5B;MACA,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAR,EAAnB;;MAEA,GAAG;QACD,IAAI,KAAK,GAAG,MAAM,CAAC,OAAP,CAAe,MAAM,CAAC,KAAtB,EAA6B,MAAM,CAAC,KAApC,CAAZ,EAAwD;UACtD;QACD;MACF,CAJD,QAIS,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAJT;;MAMA,KAAK,MAAL,GAAc,KAAd;;MAEA,IAAI,KAAJ,EAAW;QACT,OAAO,EAAE,KAAF,GAAU,KAAV,KAAoB,MAAM,GAAG,OAAO,CAAC,KAAR,EAA7B,CAAP,EAAsD;UACpD,MAAM,CAAC,WAAP;QACD;;QACD,MAAM,KAAN;MACD;IACF;EA1BH;;EAAA;AAAA,EAA6C,cAA7C","sourcesContent":["import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map"]},"metadata":{},"sourceType":"module"}