{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n  return function (source) {\n    return source.lift(new SkipWhileOperator(predicate));\n  };\n}\n\nvar SkipWhileOperator = /*#__PURE__*/function () {\n  function SkipWhileOperator(predicate) {\n    _classCallCheck(this, SkipWhileOperator);\n\n    this.predicate = predicate;\n  }\n\n  _createClass(SkipWhileOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n  }]);\n\n  return SkipWhileOperator;\n}();\n\nvar SkipWhileSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SkipWhileSubscriber, _Subscriber);\n\n  var _super = _createSuper(SkipWhileSubscriber);\n\n  function SkipWhileSubscriber(destination, predicate) {\n    var _this;\n\n    _classCallCheck(this, SkipWhileSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.skipping = true;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(SkipWhileSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n\n      if (this.skipping) {\n        this.tryCallPredicate(value);\n      }\n\n      if (!this.skipping) {\n        destination.next(value);\n      }\n    }\n  }, {\n    key: \"tryCallPredicate\",\n    value: function tryCallPredicate(value) {\n      try {\n        var result = this.predicate(value, this.index++);\n        this.skipping = Boolean(result);\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }]);\n\n  return SkipWhileSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/skipWhile.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAT,QAA2B,eAA3B;AAeA,OAAM,SAAU,SAAV,CAAuB,SAAvB,EAAsE;EAC1E,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,SAAtB,CAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,iB;EACJ,2BAAoB,SAApB,EAAmE;IAAA;;IAA/C,KAAA,SAAA,GAAA,SAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC,KAAK,SAAzC,CAAjB,CAAP;IACD;;;;;;IAQG,mB;;;;;EAIJ,6BAAY,WAAZ,EACoB,SADpB,EACmE;IAAA;;IAAA;;IACjE,0BAAM,WAAN;IADkB,MAAA,SAAA,GAAA,SAAA;IAJZ,MAAA,QAAA,GAAoB,IAApB;IACA,MAAA,KAAA,GAAgB,CAAhB;IAG2D;EAElE;;;;WAES,eAAM,KAAN,EAAc;MACtB,IAAM,WAAW,GAAG,KAAK,WAAzB;;MACA,IAAI,KAAK,QAAT,EAAmB;QACjB,KAAK,gBAAL,CAAsB,KAAtB;MACD;;MAED,IAAI,CAAC,KAAK,QAAV,EAAoB;QAClB,WAAW,CAAC,IAAZ,CAAiB,KAAjB;MACD;IACF;;;WAEO,0BAAiB,KAAjB,EAAyB;MAC/B,IAAI;QACF,IAAM,MAAM,GAAG,KAAK,SAAL,CAAe,KAAf,EAAsB,KAAK,KAAL,EAAtB,CAAf;QACA,KAAK,QAAL,GAAgB,OAAO,CAAC,MAAD,CAAvB;MACD,CAHD,CAGE,OAAO,GAAP,EAAY;QACZ,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;MACD;IACF;;;;EA3BkC,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map"]},"metadata":{},"sourceType":"module"}