{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n  return function (source) {\n    return source.lift(new SwitchFirstOperator());\n  };\n}\n\nvar SwitchFirstOperator = /*#__PURE__*/function () {\n  function SwitchFirstOperator() {\n    _classCallCheck(this, SwitchFirstOperator);\n  }\n\n  _createClass(SwitchFirstOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n  }]);\n\n  return SwitchFirstOperator;\n}();\n\nvar SwitchFirstSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(SwitchFirstSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(SwitchFirstSubscriber);\n\n  function SwitchFirstSubscriber(destination) {\n    var _this;\n\n    _classCallCheck(this, SwitchFirstSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.hasCompleted = false;\n    _this.hasSubscription = false;\n    return _this;\n  }\n\n  _createClass(SwitchFirstSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSubscription) {\n        this.hasSubscription = true;\n        this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (!this.hasSubscription) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.hasSubscription = false;\n\n      if (this.hasCompleted) {\n        this.destination.complete();\n      }\n    }\n  }]);\n\n  return SwitchFirstSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/exhaust.ts"],"names":[],"mappings":";;;;AAIA,SAAS,qBAAT,EAAgC,cAAhC,EAAgD,qBAAhD,QAA6E,mBAA7E;AAiDA,OAAM,SAAU,OAAV,GAAiB;EACrB,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,mBAAJ,EAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,mB;;;;;;;WACJ,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,qBAAJ,CAA0B,UAA1B,CAAjB,CAAP;IACD;;;;;;IAQG,qB;;;;;EAIJ,+BAAY,WAAZ,EAAsC;IAAA;;IAAA;;IACpC,0BAAM,WAAN;IAJM,MAAA,YAAA,GAAwB,KAAxB;IACA,MAAA,eAAA,GAA2B,KAA3B;IAE8B;EAErC;;;;WAES,eAAM,KAAN,EAAc;MACtB,IAAI,CAAC,KAAK,eAAV,EAA2B;QACzB,KAAK,eAAL,GAAuB,IAAvB;QACA,KAAK,GAAL,CAAS,cAAc,CAAC,KAAD,EAAQ,IAAI,qBAAJ,CAA0B,IAA1B,CAAR,CAAvB;MACD;IACF;;;WAES,qBAAS;MACjB,KAAK,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC,KAAK,eAAV,EAA2B;QACzB,KAAK,WAAL,CAAiB,QAAjB;MACD;IACF;;;WAED,0BAAc;MACZ,KAAK,eAAL,GAAuB,KAAvB;;MACA,IAAI,KAAK,YAAT,EAAuB;QACrB,KAAK,WAAL,CAAiB,QAAjB;MACD;IACF;;;;EA3BoC,qB","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\nclass SwitchFirstSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaust.js.map"]},"metadata":{},"sourceType":"module"}