{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\n\nvar SingleOperator = /*#__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    _classCallCheck(this, SingleOperator);\n\n    this.predicate = predicate;\n    this.source = source;\n  }\n\n  _createClass(SingleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n  }]);\n\n  return SingleOperator;\n}();\n\nvar SingleSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SingleSubscriber, _Subscriber);\n\n  var _super = _createSuper(SingleSubscriber);\n\n  function SingleSubscriber(destination, predicate, source) {\n    var _this;\n\n    _classCallCheck(this, SingleSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(SingleSubscriber, [{\n    key: \"applySingleValue\",\n    value: function applySingleValue(value) {\n      if (this.seenValue) {\n        this.destination.error('Sequence contains more than one element');\n      } else {\n        this.seenValue = true;\n        this.singleValue = value;\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var index = this.index++;\n\n      if (this.predicate) {\n        this.tryNext(value, index);\n      } else {\n        this.applySingleValue(value);\n      }\n    }\n  }, {\n    key: \"tryNext\",\n    value: function tryNext(value, index) {\n      try {\n        if (this.predicate(value, index, this.source)) {\n          this.applySingleValue(value);\n        }\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var destination = this.destination;\n\n      if (this.index > 0) {\n        destination.next(this.seenValue ? this.singleValue : undefined);\n        destination.complete();\n      } else {\n        destination.error(new EmptyError());\n      }\n    }\n  }]);\n\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/single.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,UAAT,QAA2B,oBAA3B;AAkDA,OAAM,SAAU,MAAV,CAAoB,SAApB,EAA2F;EAC/F,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,MAA9B,CAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,c;EACJ,wBAAoB,SAApB,EACoB,MADpB,EAC0C;IAAA;;IADtB,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,MAAA,GAAA,MAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,SAAtC,EAAiD,KAAK,MAAtD,CAAjB,CAAP;IACD;;;;;;IAQG,gB;;;;;EAKJ,0BAAY,WAAZ,EACoB,SADpB,EAEoB,MAFpB,EAE0C;IAAA;;IAAA;;IACxC,0BAAM,WAAN;IAFkB,MAAA,SAAA,GAAA,SAAA;IACA,MAAA,MAAA,GAAA,MAAA;IANZ,MAAA,SAAA,GAAqB,KAArB;IAEA,MAAA,KAAA,GAAgB,CAAhB;IAIkC;EAEzC;;;;WAEO,0BAAiB,KAAjB,EAAyB;MAC/B,IAAI,KAAK,SAAT,EAAoB;QAClB,KAAK,WAAL,CAAiB,KAAjB,CAAuB,yCAAvB;MACD,CAFD,MAEO;QACL,KAAK,SAAL,GAAiB,IAAjB;QACA,KAAK,WAAL,GAAmB,KAAnB;MACD;IACF;;;WAES,eAAM,KAAN,EAAc;MACtB,IAAM,KAAK,GAAG,KAAK,KAAL,EAAd;;MAEA,IAAI,KAAK,SAAT,EAAoB;QAClB,KAAK,OAAL,CAAa,KAAb,EAAoB,KAApB;MACD,CAFD,MAEO;QACL,KAAK,gBAAL,CAAsB,KAAtB;MACD;IACF;;;WAEO,iBAAQ,KAAR,EAAkB,KAAlB,EAA+B;MACrC,IAAI;QACF,IAAI,KAAK,SAAL,CAAe,KAAf,EAAsB,KAAtB,EAA6B,KAAK,MAAlC,CAAJ,EAA+C;UAC7C,KAAK,gBAAL,CAAsB,KAAtB;QACD;MACF,CAJD,CAIE,OAAO,GAAP,EAAY;QACZ,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;MACD;IACF;;;WAES,qBAAS;MACjB,IAAM,WAAW,GAAG,KAAK,WAAzB;;MAEA,IAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB;QAClB,WAAW,CAAC,IAAZ,CAAiB,KAAK,SAAL,GAAiB,KAAK,WAAtB,GAAoC,SAArD;QACA,WAAW,CAAC,QAAZ;MACD,CAHD,MAGO;QACL,WAAW,CAAC,KAAZ,CAAkB,IAAI,UAAJ,EAAlB;MACD;IACF;;;;EAjD+B,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n//# sourceMappingURL=single.js.map"]},"metadata":{},"sourceType":"module"}