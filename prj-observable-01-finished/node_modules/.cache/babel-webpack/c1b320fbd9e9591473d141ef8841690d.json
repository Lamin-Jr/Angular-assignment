{"ast":null,"code":"import _get from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n  return function (source) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nvar BufferWhenOperator = /*#__PURE__*/function () {\n  function BufferWhenOperator(closingSelector) {\n    _classCallCheck(this, BufferWhenOperator);\n\n    this.closingSelector = closingSelector;\n  }\n\n  _createClass(BufferWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n  }]);\n\n  return BufferWhenOperator;\n}();\n\nvar BufferWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(BufferWhenSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(BufferWhenSubscriber);\n\n  function BufferWhenSubscriber(destination, closingSelector) {\n    var _this;\n\n    _classCallCheck(this, BufferWhenSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.closingSelector = closingSelector;\n    _this.subscribing = false;\n\n    _this.openBuffer();\n\n    return _this;\n  }\n\n  _createClass(BufferWhenSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.buffer.push(value);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var buffer = this.buffer;\n\n      if (buffer) {\n        this.destination.next(buffer);\n      }\n\n      _get(_getPrototypeOf(BufferWhenSubscriber.prototype), \"_complete\", this).call(this);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.buffer = undefined;\n      this.subscribing = false;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.openBuffer();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.subscribing) {\n        this.complete();\n      } else {\n        this.openBuffer();\n      }\n    }\n  }, {\n    key: \"openBuffer\",\n    value: function openBuffer() {\n      var closingSubscription = this.closingSubscription;\n\n      if (closingSubscription) {\n        this.remove(closingSubscription);\n        closingSubscription.unsubscribe();\n      }\n\n      var buffer = this.buffer;\n\n      if (this.buffer) {\n        this.destination.next(buffer);\n      }\n\n      this.buffer = [];\n      var closingNotifier;\n\n      try {\n        var closingSelector = this.closingSelector;\n        closingNotifier = closingSelector();\n      } catch (err) {\n        return this.error(err);\n      }\n\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n      this.subscribing = false;\n    }\n  }]);\n\n  return BufferWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/bufferWhen.ts"],"names":[],"mappings":";;;;;;AAGA,SAAS,YAAT,QAA6B,iBAA7B;AAEA,SAAS,qBAAT,EAAgC,cAAhC,EAAgD,qBAAhD,QAA6E,mBAA7E;AA4CA,OAAM,SAAU,UAAV,CAAwB,eAAxB,EAA8D;EAClE,OAAO,UAAU,MAAV,EAA+B;IACpC,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,kBAAJ,CAAuB,eAAvB,CAAZ,CAAP;EACD,CAFD;AAGD;;IAEK,kB;EAEJ,4BAAoB,eAApB,EAA0D;IAAA;;IAAtC,KAAA,eAAA,GAAA,eAAA;EACnB;;;;WAED,cAAK,UAAL,EAAkC,MAAlC,EAA6C;MAC3C,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,oBAAJ,CAAyB,UAAzB,EAAqC,KAAK,eAA1C,CAAjB,CAAP;IACD;;;;;;IAQG,oB;;;;;EAKJ,8BAAY,WAAZ,EAAkD,eAAlD,EAAwF;IAAA;;IAAA;;IACtF,0BAAM,WAAN;IADgD,MAAA,eAAA,GAAA,eAAA;IAH1C,MAAA,WAAA,GAAuB,KAAvB;;IAKN,MAAK,UAAL;;IAFsF;EAGvF;;;;WAES,eAAM,KAAN,EAAc;MACtB,KAAK,MAAL,CAAa,IAAb,CAAkB,KAAlB;IACD;;;WAES,qBAAS;MACjB,IAAM,MAAM,GAAG,KAAK,MAApB;;MACA,IAAI,MAAJ,EAAY;QACV,KAAK,WAAL,CAAiB,IAAjB,CAAuB,MAAvB;MACD;;MACD;IACD;;;WAGD,wBAAY;MACV,KAAK,MAAL,GAAc,SAAd;MACA,KAAK,WAAL,GAAmB,KAAnB;IACD;;;WAED,sBAAU;MACR,KAAK,UAAL;IACD;;;WAED,0BAAc;MACZ,IAAI,KAAK,WAAT,EAAsB;QACpB,KAAK,QAAL;MACD,CAFD,MAEO;QACL,KAAK,UAAL;MACD;IACF;;;WAED,sBAAU;MACR,IAAM,mBAAN,GAA8B,IAA9B,CAAM,mBAAN;;MAEA,IAAI,mBAAJ,EAAyB;QACvB,KAAK,MAAL,CAAY,mBAAZ;QACA,mBAAmB,CAAC,WAApB;MACD;;MAED,IAAM,MAAM,GAAG,KAAK,MAApB;;MACA,IAAI,KAAK,MAAT,EAAiB;QACf,KAAK,WAAL,CAAiB,IAAjB,CAAuB,MAAvB;MACD;;MAED,KAAK,MAAL,GAAc,EAAd;MAEA,IAAI,eAAJ;;MACA,IAAI;QACF,IAAQ,eAAR,GAA4B,IAA5B,CAAQ,eAAR;QACA,eAAe,GAAG,eAAe,EAAjC;MACD,CAHD,CAGE,OAAO,GAAP,EAAY;QACZ,OAAO,KAAK,KAAL,CAAW,GAAX,CAAP;MACD;;MACD,mBAAmB,GAAG,IAAI,YAAJ,EAAtB;MACA,KAAK,mBAAL,GAA2B,mBAA3B;MACA,KAAK,GAAL,CAAS,mBAAT;MACA,KAAK,WAAL,GAAmB,IAAnB;MACA,mBAAmB,CAAC,GAApB,CAAwB,cAAc,CAAC,eAAD,EAAkB,IAAI,qBAAJ,CAA0B,IAA1B,CAAlB,CAAtC;MACA,KAAK,WAAL,GAAmB,KAAnB;IACD;;;;EApEmC,qB","sourcesContent":["import { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass BufferWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.buffer = undefined;\n        this.subscribing = false;\n    }\n    notifyNext() {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    }\n}\n//# sourceMappingURL=bufferWhen.js.map"]},"metadata":{},"sourceType":"module"}