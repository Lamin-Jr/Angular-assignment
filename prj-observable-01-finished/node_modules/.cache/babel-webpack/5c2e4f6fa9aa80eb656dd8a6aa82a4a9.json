{"ast":null,"code":"import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector) {\n  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;\n\n  if (typeof resultSelector === 'function') {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}","map":{"version":3,"sources":["../../../src/internal/operators/mergeMapTo.ts"],"names":[],"mappings":"AAEA,SAAS,QAAT,QAAyB,YAAzB;AAiDA,OAAM,SAAU,UAAV,CACJ,eADI,EAEJ,cAFI,EAGyC;EAAA,IAA7C,UAA6C,uEAAxB,MAAM,CAAC,iBAAiB;;EAE7C,IAAI,OAAO,cAAP,KAA0B,UAA9B,EAA0C;IACxC,OAAO,QAAQ,CAAC;MAAA,OAAM,eAAN;IAAA,CAAD,EAAwB,cAAxB,EAAwC,UAAxC,CAAf;EACD;;EACD,IAAI,OAAO,cAAP,KAA0B,QAA9B,EAAwC;IACtC,UAAU,GAAG,cAAb;EACD;;EACD,OAAO,QAAQ,CAAC;IAAA,OAAM,eAAN;EAAA,CAAD,EAAwB,UAAxB,CAAf;AACD","sourcesContent":["import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map"]},"metadata":{},"sourceType":"module"}