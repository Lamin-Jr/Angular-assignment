{"ast":null,"code":"import _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var Subscriber = /*#__PURE__*/function (_Subscription) {\n  _inherits(Subscriber, _Subscription);\n\n  var _super = _createSuper(Subscriber);\n\n  function Subscriber(destinationOrNext, error, complete) {\n    var _this;\n\n    _classCallCheck(this, Subscriber);\n\n    _this = _super.call(this);\n    _this.syncErrorValue = null;\n    _this.syncErrorThrown = false;\n    _this.syncErrorThrowable = false;\n    _this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        _this.destination = emptyObserver;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          _this.destination = emptyObserver;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            _this.destination = destinationOrNext;\n            destinationOrNext.add(_assertThisInitialized(_this));\n          } else {\n            _this.syncErrorThrowable = true;\n            _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        _this.syncErrorThrowable = true;\n        _this.destination = new SafeSubscriber(_assertThisInitialized(_this), destinationOrNext, error, complete);\n        break;\n    }\n\n    return _this;\n  }\n\n  _createClass(Subscriber, [{\n    key: rxSubscriberSymbol,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped) {\n        this._next(value);\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        this.isStopped = true;\n\n        this._error(err);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (!this.isStopped) {\n        this.isStopped = true;\n\n        this._complete();\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.closed) {\n        return;\n      }\n\n      this.isStopped = true;\n\n      _get(_getPrototypeOf(Subscriber.prototype), \"unsubscribe\", this).call(this);\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.destination.next(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.destination.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.destination.complete();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_unsubscribeAndRecycle\",\n    value: function _unsubscribeAndRecycle() {\n      var _parentOrParents = this._parentOrParents;\n      this._parentOrParents = null;\n      this.unsubscribe();\n      this.closed = false;\n      this.isStopped = false;\n      this._parentOrParents = _parentOrParents;\n      return this;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(next, error, complete) {\n      var subscriber = new Subscriber(next, error, complete);\n      subscriber.syncErrorThrowable = false;\n      return subscriber;\n    }\n  }]);\n\n  return Subscriber;\n}(Subscription);\nexport var SafeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SafeSubscriber, _Subscriber);\n\n  var _super2 = _createSuper(SafeSubscriber);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    var _this2;\n\n    _classCallCheck(this, SafeSubscriber);\n\n    _this2 = _super2.call(this);\n    _this2._parentSubscriber = _parentSubscriber;\n    var next;\n\n    var context = _assertThisInitialized(_this2);\n\n    if (isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction(context.unsubscribe)) {\n          _this2.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = _this2.unsubscribe.bind(_assertThisInitialized(_this2));\n      }\n    }\n\n    _this2._context = context;\n    _this2._next = next;\n    _this2._error = error;\n    _this2._complete = complete;\n    return _this2;\n  }\n\n  _createClass(SafeSubscriber, [{\n    key: \"next\",\n    value: function next(value) {\n      if (!this.isStopped && this._next) {\n        var _parentSubscriber = this._parentSubscriber;\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._next, value);\n        } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n        var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n\n        if (this._error) {\n          if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(this._error, err);\n\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n            this.unsubscribe();\n          }\n        } else if (!_parentSubscriber.syncErrorThrowable) {\n          this.unsubscribe();\n\n          if (useDeprecatedSynchronousErrorHandling) {\n            throw err;\n          }\n\n          hostReportError(err);\n        } else {\n          if (useDeprecatedSynchronousErrorHandling) {\n            _parentSubscriber.syncErrorValue = err;\n            _parentSubscriber.syncErrorThrown = true;\n          } else {\n            hostReportError(err);\n          }\n\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var _this3 = this;\n\n      if (!this.isStopped) {\n        var _parentSubscriber = this._parentSubscriber;\n\n        if (this._complete) {\n          var wrappedComplete = function wrappedComplete() {\n            return _this3._complete.call(_this3._context);\n          };\n\n          if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n            this.__tryOrUnsub(wrappedComplete);\n\n            this.unsubscribe();\n          } else {\n            this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n            this.unsubscribe();\n          }\n        } else {\n          this.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrUnsub\",\n    value: function __tryOrUnsub(fn, value) {\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        this.unsubscribe();\n\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        } else {\n          hostReportError(err);\n        }\n      }\n    }\n  }, {\n    key: \"__tryOrSetError\",\n    value: function __tryOrSetError(parent, fn, value) {\n      if (!config.useDeprecatedSynchronousErrorHandling) {\n        throw new Error('bad call');\n      }\n\n      try {\n        fn.call(this._context, value);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          parent.syncErrorValue = err;\n          parent.syncErrorThrown = true;\n          return true;\n        } else {\n          hostReportError(err);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var _parentSubscriber = this._parentSubscriber;\n      this._context = null;\n      this._parentSubscriber = null;\n\n      _parentSubscriber.unsubscribe();\n    }\n  }]);\n\n  return SafeSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../src/internal/Subscriber.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n    constructor(destinationOrNext, error, complete) {\n        super();\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        destinationOrNext.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    _unsubscribeAndRecycle() {\n        const { _parentOrParents } = this;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscriber.js.map"]},"metadata":{},"sourceType":"module"}