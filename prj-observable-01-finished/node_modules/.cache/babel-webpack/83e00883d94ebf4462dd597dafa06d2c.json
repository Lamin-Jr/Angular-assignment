{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n  return function (source) {\n    return source.lift(new IsEmptyOperator());\n  };\n}\n\nvar IsEmptyOperator = /*#__PURE__*/function () {\n  function IsEmptyOperator() {\n    _classCallCheck(this, IsEmptyOperator);\n  }\n\n  _createClass(IsEmptyOperator, [{\n    key: \"call\",\n    value: function call(observer, source) {\n      return source.subscribe(new IsEmptySubscriber(observer));\n    }\n  }]);\n\n  return IsEmptyOperator;\n}();\n\nvar IsEmptySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(IsEmptySubscriber, _Subscriber);\n\n  var _super = _createSuper(IsEmptySubscriber);\n\n  function IsEmptySubscriber(destination) {\n    _classCallCheck(this, IsEmptySubscriber);\n\n    return _super.call(this, destination);\n  }\n\n  _createClass(IsEmptySubscriber, [{\n    key: \"notifyComplete\",\n    value: function notifyComplete(isEmpty) {\n      var destination = this.destination;\n      destination.next(isEmpty);\n      destination.complete();\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.notifyComplete(false);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.notifyComplete(true);\n    }\n  }]);\n\n  return IsEmptySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/isEmpty.ts"],"names":[],"mappings":";;;;AACA,SAAS,UAAT,QAA2B,eAA3B;AAgEA,OAAM,SAAU,OAAV,GAAiB;EACrB,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,eAAJ,EAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,e;;;;;;;WACJ,cAAM,QAAN,EAAqC,MAArC,EAAgD;MAC9C,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,iBAAJ,CAAsB,QAAtB,CAAjB,CAAP;IACD;;;;;;IAQG,iB;;;;;EACJ,2BAAY,WAAZ,EAA4C;IAAA;;IAAA,yBACpC,WADoC;EAE3C;;;;WAEO,wBAAe,OAAf,EAA+B;MACrC,IAAM,WAAW,GAAG,KAAK,WAAzB;MAEA,WAAW,CAAC,IAAZ,CAAiB,OAAjB;MACA,WAAW,CAAC,QAAZ;IACD;;;WAES,eAAM,KAAN,EAAoB;MAC5B,KAAK,cAAL,CAAoB,KAApB;IACD;;;WAES,qBAAS;MACjB,KAAK,cAAL,CAAoB,IAApB;IACD;;;;EAlB6B,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=isEmpty.js.map"]},"metadata":{},"sourceType":"module"}