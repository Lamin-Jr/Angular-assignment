{"ast":null,"code":"import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n  return distinctUntilChanged(function (x, y) {\n    return compare ? compare(x[key], y[key]) : x[key] === y[key];\n  });\n}","map":{"version":3,"sources":["../../../src/internal/operators/distinctUntilKeyChanged.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,QAAqC,wBAArC;AA8EA,OAAM,SAAU,uBAAV,CAAwD,GAAxD,EAAgE,OAAhE,EAAuG;EAC3G,OAAO,oBAAoB,CAAC,UAAC,CAAD,EAAO,CAAP;IAAA,OAAgB,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAD,CAAF,EAAS,CAAC,CAAC,GAAD,CAAV,CAAV,GAA6B,CAAC,CAAC,GAAD,CAAD,KAAW,CAAC,CAAC,GAAD,CAAhE;EAAA,CAAD,CAA3B;AACD","sourcesContent":["import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map"]},"metadata":{},"sourceType":"module"}