{"ast":null,"code":"import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer() {\n  var dueTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var periodOrScheduler = arguments.length > 1 ? arguments[1] : undefined;\n  var scheduler = arguments.length > 2 ? arguments[2] : undefined;\n  var period = -1;\n\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    var due = isNumeric(dueTime) ? dueTime : +dueTime - scheduler.now();\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period: period,\n      subscriber: subscriber\n    });\n  });\n}\n\nfunction dispatch(state) {\n  var index = state.index,\n      period = state.period,\n      subscriber = state.subscriber;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/observable/timer.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,KAAT,QAAsB,oBAAtB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AACA,SAAS,WAAT,QAA4B,qBAA5B;AAqDA,OAAM,SAAU,KAAV,GAEyC;EAAA,IAFzB,OAEyB,uEAFA,CAEA;EAAA,IADzB,iBACyB;EAAA,IAAzB,SAAyB;EAC7C,IAAI,MAAM,GAAG,CAAC,CAAd;;EACA,IAAI,SAAS,CAAC,iBAAD,CAAb,EAAkC;IAChC,MAAM,GAAG,MAAM,CAAC,iBAAD,CAAN,GAA4B,CAA5B,IAAiC,CAAjC,IAAsC,MAAM,CAAC,iBAAD,CAArD;EACD,CAFD,MAEO,IAAI,WAAW,CAAC,iBAAD,CAAf,EAAoC;IACzC,SAAS,GAAG,iBAAZ;EACD;;EAED,IAAI,CAAC,WAAW,CAAC,SAAD,CAAhB,EAA6B;IAC3B,SAAS,GAAG,KAAZ;EACD;;EAED,OAAO,IAAI,UAAJ,CAAe,UAAA,UAAU,EAAG;IACjC,IAAM,GAAG,GAAG,SAAS,CAAC,OAAD,CAAT,GACP,OADO,GAEP,CAAC,OAAD,GAAW,SAAS,CAAC,GAAV,EAFhB;IAIA,OAAO,SAAS,CAAC,QAAV,CAAmB,QAAnB,EAA6B,GAA7B,EAAkC;MACvC,KAAK,EAAE,CADgC;MAC7B,MAAM,EAAN,MAD6B;MACrB,UAAU,EAAV;IADqB,CAAlC,CAAP;EAGD,CARM,CAAP;AASD;;AAQD,SAAS,QAAT,CAAqD,KAArD,EAAsE;EACpE,IAAQ,KAAR,GAAsC,KAAtC,CAAQ,KAAR;EAAA,IAAe,MAAf,GAAsC,KAAtC,CAAe,MAAf;EAAA,IAAuB,UAAvB,GAAsC,KAAtC,CAAuB,UAAvB;EACA,UAAU,CAAC,IAAX,CAAgB,KAAhB;;EAEA,IAAI,UAAU,CAAC,MAAf,EAAuB;IACrB;EACD,CAFD,MAEO,IAAI,MAAM,KAAK,CAAC,CAAhB,EAAmB;IACxB,OAAO,UAAU,CAAC,QAAX,EAAP;EACD;;EAED,KAAK,CAAC,KAAN,GAAc,KAAK,GAAG,CAAtB;EACA,KAAK,QAAL,CAAc,KAAd,EAAqB,MAArB;AACD","sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map"]},"metadata":{},"sourceType":"module"}