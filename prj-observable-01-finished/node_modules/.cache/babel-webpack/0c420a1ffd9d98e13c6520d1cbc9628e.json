{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nvar DistinctUntilChangedOperator = /*#__PURE__*/function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    _classCallCheck(this, DistinctUntilChangedOperator);\n\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  _createClass(DistinctUntilChangedOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n  }]);\n\n  return DistinctUntilChangedOperator;\n}();\n\nvar DistinctUntilChangedSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(DistinctUntilChangedSubscriber, _Subscriber);\n\n  var _super = _createSuper(DistinctUntilChangedSubscriber);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    var _this;\n\n    _classCallCheck(this, DistinctUntilChangedSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.keySelector = keySelector;\n    _this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      _this.compare = compare;\n    }\n\n    return _this;\n  }\n\n  _createClass(DistinctUntilChangedSubscriber, [{\n    key: \"compare\",\n    value: function compare(x, y) {\n      return x === y;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var key;\n\n      try {\n        var keySelector = this.keySelector;\n        key = keySelector ? keySelector(value) : value;\n      } catch (err) {\n        return this.destination.error(err);\n      }\n\n      var result = false;\n\n      if (this.hasKey) {\n        try {\n          var compare = this.compare;\n          result = compare(this.key, key);\n        } catch (err) {\n          return this.destination.error(err);\n        }\n      } else {\n        this.hasKey = true;\n      }\n\n      if (!result) {\n        this.key = key;\n        this.destination.next(value);\n      }\n    }\n  }]);\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/distinctUntilChanged.ts"],"names":[],"mappings":";;;;AACA,SAAS,UAAT,QAA2B,eAA3B;AA8DA,OAAM,SAAU,oBAAV,CAAqC,OAArC,EAAwE,WAAxE,EAAiG;EACrG,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,4BAAJ,CAAuC,OAAvC,EAAgD,WAAhD,CAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,4B;EACJ,sCAAoB,OAApB,EACoB,WADpB,EAC4C;IAAA;;IADxB,KAAA,OAAA,GAAA,OAAA;IACA,KAAA,WAAA,GAAA,WAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,8BAAJ,CAAmC,UAAnC,EAA+C,KAAK,OAApD,EAA6D,KAAK,WAAlE,CAAjB,CAAP;IACD;;;;;;IAQG,8B;;;;;EAIJ,wCAAY,WAAZ,EACY,OADZ,EAEoB,WAFpB,EAE4C;IAAA;;IAAA;;IAC1C,0BAAM,WAAN;IADkB,MAAA,WAAA,GAAA,WAAA;IAJZ,MAAA,MAAA,GAAkB,KAAlB;;IAMN,IAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;MACjC,MAAK,OAAL,GAAe,OAAf;IACD;;IAJyC;EAK3C;;;;WAEO,iBAAQ,CAAR,EAAgB,CAAhB,EAAsB;MAC5B,OAAO,CAAC,KAAK,CAAb;IACD;;;WAES,eAAM,KAAN,EAAc;MACtB,IAAI,GAAJ;;MACA,IAAI;QACF,IAAQ,WAAR,GAAwB,IAAxB,CAAQ,WAAR;QACA,GAAG,GAAG,WAAW,GAAG,WAAW,CAAC,KAAD,CAAd,GAAwB,KAAzC;MACD,CAHD,CAGE,OAAO,GAAP,EAAY;QACZ,OAAO,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB,CAAP;MACD;;MACD,IAAI,MAAM,GAAG,KAAb;;MACA,IAAI,KAAK,MAAT,EAAiB;QACf,IAAI;UACF,IAAQ,OAAR,GAAoB,IAApB,CAAQ,OAAR;UACA,MAAM,GAAG,OAAO,CAAC,KAAK,GAAN,EAAW,GAAX,CAAhB;QACD,CAHD,CAGE,OAAO,GAAP,EAAY;UACZ,OAAO,KAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB,CAAP;QACD;MACF,CAPD,MAOO;QACL,KAAK,MAAL,GAAc,IAAd;MACD;;MACD,IAAI,CAAC,MAAL,EAAa;QACX,KAAK,GAAL,GAAW,GAAX;QACA,KAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAtB;MACD;IACF;;;;EAxCgD,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n}\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        let key;\n        try {\n            const { keySelector } = this;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        let result = false;\n        if (this.hasKey) {\n            try {\n                const { compare } = this;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinctUntilChanged.js.map"]},"metadata":{},"sourceType":"module"}