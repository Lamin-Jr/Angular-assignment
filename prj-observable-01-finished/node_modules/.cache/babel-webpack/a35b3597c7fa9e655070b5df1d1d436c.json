{"ast":null,"code":"import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n  return new Observable(function (subscriber) {\n    var input;\n\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/defer.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,KAAT,QAAsB,SAAtB;AAmDA,OAAM,SAAU,KAAV,CAAuD,iBAAvD,EAAiF;EACrF,OAAO,IAAI,UAAJ,CAAmC,UAAA,UAAU,EAAG;IACrD,IAAI,KAAJ;;IACA,IAAI;MACF,KAAK,GAAG,iBAAiB,EAAzB;IACD,CAFD,CAEE,OAAO,GAAP,EAAY;MACZ,UAAU,CAAC,KAAX,CAAiB,GAAjB;MACA,OAAO,SAAP;IACD;;IACD,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,KAAD,CAAP,GAAwD,KAAK,EAAjF;IACA,OAAO,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAP;EACD,CAVM,CAAP;AAWD","sourcesContent":["import { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(subscriber => {\n        let input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map"]},"metadata":{},"sourceType":"module"}