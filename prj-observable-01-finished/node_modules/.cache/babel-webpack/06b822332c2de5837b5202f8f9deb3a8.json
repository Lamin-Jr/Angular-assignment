{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultThrottleConfig;\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n  };\n}\n\nvar ThrottleOperator = /*#__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    _classCallCheck(this, ThrottleOperator);\n\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  _createClass(ThrottleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n  }]);\n\n  return ThrottleOperator;\n}();\n\nvar ThrottleSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(ThrottleSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(ThrottleSubscriber);\n\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this;\n\n    _classCallCheck(this, ThrottleSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n\n  _createClass(ThrottleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this._hasValue = true;\n      this._sendValue = value;\n\n      if (!this._throttled) {\n        if (this._leading) {\n          this.send();\n        } else {\n          this.throttle(value);\n        }\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var _hasValue = this._hasValue,\n          _sendValue = this._sendValue;\n\n      if (_hasValue) {\n        this.destination.next(_sendValue);\n        this.throttle(_sendValue);\n      }\n\n      this._hasValue = false;\n      this._sendValue = undefined;\n    }\n  }, {\n    key: \"throttle\",\n    value: function throttle(value) {\n      var duration = this.tryDurationSelector(value);\n\n      if (!!duration) {\n        this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n      }\n    }\n  }, {\n    key: \"tryDurationSelector\",\n    value: function tryDurationSelector(value) {\n      try {\n        return this.durationSelector(value);\n      } catch (err) {\n        this.destination.error(err);\n        return null;\n      }\n    }\n  }, {\n    key: \"throttlingDone\",\n    value: function throttlingDone() {\n      var _throttled = this._throttled,\n          _trailing = this._trailing;\n\n      if (_throttled) {\n        _throttled.unsubscribe();\n      }\n\n      this._throttled = undefined;\n\n      if (_trailing) {\n        this.send();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.throttlingDone();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.throttlingDone();\n    }\n  }]);\n\n  return ThrottleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/throttle.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map"]},"metadata":{},"sourceType":"module"}