{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  var resultSelector = undefined;\n  var scheduler = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport var CombineLatestOperator = /*#__PURE__*/function () {\n  function CombineLatestOperator(resultSelector) {\n    _classCallCheck(this, CombineLatestOperator);\n\n    this.resultSelector = resultSelector;\n  }\n\n  _createClass(CombineLatestOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n  }]);\n\n  return CombineLatestOperator;\n}();\nexport var CombineLatestSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(CombineLatestSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(CombineLatestSubscriber);\n\n  function CombineLatestSubscriber(destination, resultSelector) {\n    var _this;\n\n    _classCallCheck(this, CombineLatestSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.resultSelector = resultSelector;\n    _this.active = 0;\n    _this.values = [];\n    _this.observables = [];\n    return _this;\n  }\n\n  _createClass(CombineLatestSubscriber, [{\n    key: \"_next\",\n    value: function _next(observable) {\n      this.values.push(NONE);\n      this.observables.push(observable);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var observables = this.observables;\n      var len = observables.length;\n\n      if (len === 0) {\n        this.destination.complete();\n      } else {\n        this.active = len;\n        this.toRespond = len;\n\n        for (var i = 0; i < len; i++) {\n          var observable = observables[i];\n          this.add(subscribeToResult(this, observable, undefined, i));\n        }\n      }\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(unused) {\n      if ((this.active -= 1) === 0) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(_outerValue, innerValue, outerIndex) {\n      var values = this.values;\n      var oldVal = values[outerIndex];\n      var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n      values[outerIndex] = innerValue;\n\n      if (toRespond === 0) {\n        if (this.resultSelector) {\n          this._tryResultSelector(values);\n        } else {\n          this.destination.next(values.slice());\n        }\n      }\n    }\n  }, {\n    key: \"_tryResultSelector\",\n    value: function _tryResultSelector(values) {\n      var result;\n\n      try {\n        result = this.resultSelector.apply(this, values);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n\n  return CombineLatestSubscriber;\n}(OuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","sourcesContent":["import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\nexport function combineLatest(...observables) {\n    let resultSelector = undefined;\n    let scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class CombineLatestSubscriber extends OuterSubscriber {\n    constructor(destination, resultSelector) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    _next(observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (let i = 0; i < len; i++) {\n                const observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    }\n    notifyComplete(unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        const values = this.values;\n        const oldVal = values[outerIndex];\n        const toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    }\n    _tryResultSelector(values) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=combineLatest.js.map"]},"metadata":{},"sourceType":"module"}