{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  var resultSelector = observables[observables.length - 1];\n\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport var ZipOperator = /*#__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    _classCallCheck(this, ZipOperator);\n\n    this.resultSelector = resultSelector;\n  }\n\n  _createClass(ZipOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n  }]);\n\n  return ZipOperator;\n}();\nexport var ZipSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ZipSubscriber, _Subscriber);\n\n  var _super = _createSuper(ZipSubscriber);\n\n  function ZipSubscriber(destination, resultSelector) {\n    var _this;\n\n    var values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.create(null);\n\n    _classCallCheck(this, ZipSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.resultSelector = resultSelector;\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;\n    return _this;\n  }\n\n  _createClass(ZipSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var iterators = this.iterators;\n\n      if (isArray(value)) {\n        iterators.push(new StaticArrayIterator(value));\n      } else if (typeof value[Symbol_iterator] === 'function') {\n        iterators.push(new StaticIterator(value[Symbol_iterator]()));\n      } else {\n        iterators.push(new ZipBufferIterator(this.destination, this, value));\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      this.unsubscribe();\n\n      if (len === 0) {\n        this.destination.complete();\n        return;\n      }\n\n      this.active = len;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (iterator.stillUnsubscribed) {\n          var destination = this.destination;\n          destination.add(iterator.subscribe());\n        } else {\n          this.active--;\n        }\n      }\n    }\n  }, {\n    key: \"notifyInactive\",\n    value: function notifyInactive() {\n      this.active--;\n\n      if (this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"checkIterators\",\n    value: function checkIterators() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      var destination = this.destination;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n          return;\n        }\n      }\n\n      var shouldComplete = false;\n      var args = [];\n\n      for (var _i = 0; _i < len; _i++) {\n        var _iterator = iterators[_i];\n\n        var result = _iterator.next();\n\n        if (_iterator.hasCompleted()) {\n          shouldComplete = true;\n        }\n\n        if (result.done) {\n          destination.complete();\n          return;\n        }\n\n        args.push(result.value);\n      }\n\n      if (this.resultSelector) {\n        this._tryresultSelector(args);\n      } else {\n        destination.next(args);\n      }\n\n      if (shouldComplete) {\n        destination.complete();\n      }\n    }\n  }, {\n    key: \"_tryresultSelector\",\n    value: function _tryresultSelector(args) {\n      var result;\n\n      try {\n        result = this.resultSelector.apply(this, args);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n\n  return ZipSubscriber;\n}(Subscriber);\n\nvar StaticIterator = /*#__PURE__*/function () {\n  function StaticIterator(iterator) {\n    _classCallCheck(this, StaticIterator);\n\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  _createClass(StaticIterator, [{\n    key: \"hasValue\",\n    value: function hasValue() {\n      return true;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var result = this.nextResult;\n      this.nextResult = this.iterator.next();\n      return result;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      var nextResult = this.nextResult;\n      return Boolean(nextResult && nextResult.done);\n    }\n  }]);\n\n  return StaticIterator;\n}();\n\nvar StaticArrayIterator = /*#__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    _classCallCheck(this, StaticArrayIterator);\n\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  _createClass(StaticArrayIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      var i = this.index++;\n      var array = this.array;\n      return i < this.length ? {\n        value: array[i],\n        done: false\n      } : {\n        value: null,\n        done: true\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.array.length > this.index;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.array.length === this.index;\n    }\n  }]);\n\n  return StaticArrayIterator;\n}();\n\nvar ZipBufferIterator = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(ZipBufferIterator, _SimpleOuterSubscribe);\n\n  var _super2 = _createSuper(ZipBufferIterator);\n\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this2;\n\n    _classCallCheck(this, ZipBufferIterator);\n\n    _this2 = _super2.call(this, destination);\n    _this2.parent = parent;\n    _this2.observable = observable;\n    _this2.stillUnsubscribed = true;\n    _this2.buffer = [];\n    _this2.isComplete = false;\n    return _this2;\n  }\n\n  _createClass(ZipBufferIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var buffer = this.buffer;\n\n      if (buffer.length === 0 && this.isComplete) {\n        return {\n          value: null,\n          done: true\n        };\n      } else {\n        return {\n          value: buffer.shift(),\n          done: false\n        };\n      }\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.buffer.length > 0;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.buffer.length === 0 && this.isComplete;\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.buffer.length > 0) {\n        this.isComplete = true;\n        this.parent.notifyInactive();\n      } else {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this.buffer.push(innerValue);\n      this.parent.checkIterators();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n  }]);\n\n  return ZipBufferIterator;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/observable/zip.ts"],"names":[],"mappings":"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","sourcesContent":["import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n//# sourceMappingURL=zip.js.map"]},"metadata":{},"sourceType":"module"}