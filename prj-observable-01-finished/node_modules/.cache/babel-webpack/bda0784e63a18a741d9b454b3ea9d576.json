{"ast":null,"code":"import _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nvar SubscribeOnOperator = /*#__PURE__*/function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    _classCallCheck(this, SubscribeOnOperator);\n\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  _createClass(SubscribeOnOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n  }]);\n\n  return SubscribeOnOperator;\n}();","map":{"version":3,"sources":["../../../src/internal/operators/subscribeOn.ts"],"names":[],"mappings":";;AAGA,SAAS,qBAAT,QAAsC,qCAAtC;AA6CA,OAAM,SAAU,WAAV,CAAyB,SAAzB,EAAoE;EAAA,IAAjB,KAAiB,uEAAD,CAAC;EACxE,OAAO,SAAS,2BAAT,CAAqC,MAArC,EAA0D;IAC/D,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,mBAAJ,CAA2B,SAA3B,EAAsC,KAAtC,CAAZ,CAAP;EACD,CAFD;AAGD;;IAEK,mB;EACJ,6BAAoB,SAApB,EACoB,KADpB,EACiC;IAAA;;IADb,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,KAAA,GAAA,KAAA;EACnB;;;;WACD,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,IAAI,qBAAJ,CACL,MADK,EACG,KAAK,KADR,EACe,KAAK,SADpB,EAEL,SAFK,CAEK,UAFL,CAAP;IAGD","sourcesContent":["import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map"]},"metadata":{},"sourceType":"module"}