{"ast":null,"code":"import _get from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var VirtualTimeScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  _inherits(VirtualTimeScheduler, _AsyncScheduler);\n\n  var _super = _createSuper(VirtualTimeScheduler);\n\n  function VirtualTimeScheduler() {\n    var _this;\n\n    var SchedulerAction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : VirtualAction;\n    var maxFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n    _classCallCheck(this, VirtualTimeScheduler);\n\n    _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    });\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  _createClass(VirtualTimeScheduler, [{\n    key: \"flush\",\n    value: function flush() {\n      var actions = this.actions,\n          maxFrames = this.maxFrames;\n      var error, action;\n\n      while ((action = actions[0]) && action.delay <= maxFrames) {\n        actions.shift();\n        this.frame = action.delay;\n\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      }\n\n      if (error) {\n        while (action = actions.shift()) {\n          action.unsubscribe();\n        }\n\n        throw error;\n      }\n    }\n  }]);\n\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport var VirtualAction = /*#__PURE__*/function (_AsyncAction) {\n  _inherits(VirtualAction, _AsyncAction);\n\n  var _super2 = _createSuper(VirtualAction);\n\n  function VirtualAction(scheduler, work) {\n    var _this2;\n\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scheduler.index += 1;\n\n    _classCallCheck(this, VirtualAction);\n\n    _this2 = _super2.call(this, scheduler, work);\n    _this2.scheduler = scheduler;\n    _this2.work = work;\n    _this2.index = index;\n    _this2.active = true;\n    _this2.index = scheduler.index = index;\n    return _this2;\n  }\n\n  _createClass(VirtualAction, [{\n    key: \"schedule\",\n    value: function schedule(state) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (!this.id) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"schedule\", this).call(this, state, delay);\n      }\n\n      this.active = false;\n      var action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    }\n  }, {\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      this.delay = scheduler.frame + delay;\n      var actions = scheduler.actions;\n      actions.push(this);\n      actions.sort(VirtualAction.sortActions);\n      return true;\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      return undefined;\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute(state, delay) {\n      if (this.active === true) {\n        return _get(_getPrototypeOf(VirtualAction.prototype), \"_execute\", this).call(this, state, delay);\n      }\n    }\n  }], [{\n    key: \"sortActions\",\n    value: function sortActions(a, b) {\n      if (a.delay === b.delay) {\n        if (a.index === b.index) {\n          return 0;\n        } else if (a.index > b.index) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else if (a.delay > b.delay) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }]);\n\n  return VirtualAction;\n}(AsyncAction);","map":{"version":3,"sources":["../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]},"metadata":{},"sourceType":"module"}