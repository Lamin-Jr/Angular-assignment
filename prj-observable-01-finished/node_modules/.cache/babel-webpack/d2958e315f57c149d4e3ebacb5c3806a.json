{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      var observable = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next: function next(value) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.next(value);\n          }));\n        },\n        error: function error(err) {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.error(err);\n          }));\n        },\n        complete: function complete() {\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"sources":["../../../src/internal/scheduled/scheduleObservable.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,YAAT,QAA6B,iBAA7B;AACA,SAAS,UAAU,IAAI,iBAAvB,QAAgD,sBAAhD;AAGA,OAAM,SAAU,kBAAV,CAAgC,KAAhC,EAA6D,SAA7D,EAAqF;EACzF,OAAO,IAAI,UAAJ,CAAkB,UAAA,UAAU,EAAG;IACpC,IAAM,GAAG,GAAG,IAAI,YAAJ,EAAZ;IACA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAK;MAC9B,IAAM,UAAU,GAAoB,KAAK,CAAC,iBAAD,CAAL,EAApC;MACA,GAAG,CAAC,GAAJ,CAAQ,UAAU,CAAC,SAAX,CAAqB;QAC3B,IAD2B,gBACtB,KADsB,EACjB;UAAI,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;YAAA,OAAM,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAN;UAAA,CAAnB,CAAR;QAA4D,CAD/C;QAE3B,KAF2B,iBAErB,GAFqB,EAElB;UAAI,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;YAAA,OAAM,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAN;UAAA,CAAnB,CAAR;QAA2D,CAF7C;QAG3B,QAH2B,sBAGnB;UAAK,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;YAAA,OAAM,UAAU,CAAC,QAAX,EAAN;UAAA,CAAnB,CAAR;QAA2D;MAH7C,CAArB,CAAR;IAKD,CAPO,CAAR;IAQA,OAAO,GAAP;EACD,CAXM,CAAP;AAYD","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => {\n            const observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map"]},"metadata":{},"sourceType":"module"}