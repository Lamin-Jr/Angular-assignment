{"ast":null,"code":"import _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration) {\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : async;\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultThrottleConfig;\n  return function (source) {\n    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n  };\n}\n\nvar ThrottleTimeOperator = /*#__PURE__*/function () {\n  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n    _classCallCheck(this, ThrottleTimeOperator);\n\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  _createClass(ThrottleTimeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n  }]);\n\n  return ThrottleTimeOperator;\n}();\n\nvar ThrottleTimeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(ThrottleTimeSubscriber, _Subscriber);\n\n  var _super = _createSuper(ThrottleTimeSubscriber);\n\n  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n    var _this;\n\n    _classCallCheck(this, ThrottleTimeSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.duration = duration;\n    _this.scheduler = scheduler;\n    _this.leading = leading;\n    _this.trailing = trailing;\n    _this._hasTrailingValue = false;\n    _this._trailingValue = null;\n    return _this;\n  }\n\n  _createClass(ThrottleTimeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.throttled) {\n        if (this.trailing) {\n          this._trailingValue = value;\n          this._hasTrailingValue = true;\n        }\n      } else {\n        this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n          subscriber: this\n        }));\n\n        if (this.leading) {\n          this.destination.next(value);\n        } else if (this.trailing) {\n          this._trailingValue = value;\n          this._hasTrailingValue = true;\n        }\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      if (this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this.destination.complete();\n      } else {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"clearThrottle\",\n    value: function clearThrottle() {\n      var throttled = this.throttled;\n\n      if (throttled) {\n        if (this.trailing && this._hasTrailingValue) {\n          this.destination.next(this._trailingValue);\n          this._trailingValue = null;\n          this._hasTrailingValue = false;\n        }\n\n        throttled.unsubscribe();\n        this.remove(throttled);\n        this.throttled = null;\n      }\n    }\n  }]);\n\n  return ThrottleTimeSubscriber;\n}(Subscriber);\n\nfunction dispatchNext(arg) {\n  var subscriber = arg.subscriber;\n  subscriber.clearThrottle();\n}","map":{"version":3,"sources":["../../../src/internal/operators/throttleTime.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map"]},"metadata":{},"sourceType":"module"}