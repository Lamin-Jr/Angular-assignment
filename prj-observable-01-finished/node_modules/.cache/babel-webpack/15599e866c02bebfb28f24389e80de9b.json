{"ast":null,"code":"import { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function subscribeToPromise(promise) {\n  return function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, hostReportError);\n    return subscriber;\n  };\n};","map":{"version":3,"sources":["../../../src/internal/util/subscribeToPromise.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,OAAO,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAI,OAAJ;EAAA,OAAgC,UAAC,UAAD,EAA8B;IAC9F,OAAO,CAAC,IAAR,CACE,UAAC,KAAD,EAAU;MACR,IAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;QACtB,UAAU,CAAC,IAAX,CAAgB,KAAhB;QACA,UAAU,CAAC,QAAX;MACD;IACF,CANH,EAOE,UAAC,GAAD;MAAA,OAAc,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAd;IAAA,CAPF,EASC,IATD,CASM,IATN,EASY,eATZ;IAUA,OAAO,UAAP;EACD,CAZiC;AAAA,CAA3B","sourcesContent":["import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map"]},"metadata":{},"sourceType":"module"}