{"ast":null,"code":"import _get from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return function (source) {\n      return source.pipe(switchMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new SwitchMapOperator(project));\n  };\n}\n\nvar SwitchMapOperator = /*#__PURE__*/function () {\n  function SwitchMapOperator(project) {\n    _classCallCheck(this, SwitchMapOperator);\n\n    this.project = project;\n  }\n\n  _createClass(SwitchMapOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n  }]);\n\n  return SwitchMapOperator;\n}();\n\nvar SwitchMapSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(SwitchMapSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(SwitchMapSubscriber);\n\n  function SwitchMapSubscriber(destination, project) {\n    var _this;\n\n    _classCallCheck(this, SwitchMapSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(SwitchMapSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var result;\n      var index = this.index++;\n\n      try {\n        result = this.project(value, index);\n      } catch (error) {\n        this.destination.error(error);\n        return;\n      }\n\n      this._innerSub(result);\n    }\n  }, {\n    key: \"_innerSub\",\n    value: function _innerSub(result) {\n      var innerSubscription = this.innerSubscription;\n\n      if (innerSubscription) {\n        innerSubscription.unsubscribe();\n      }\n\n      var innerSubscriber = new SimpleInnerSubscriber(this);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      this.innerSubscription = innerSubscribe(result, innerSubscriber);\n\n      if (this.innerSubscription !== innerSubscriber) {\n        destination.add(this.innerSubscription);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var innerSubscription = this.innerSubscription;\n\n      if (!innerSubscription || innerSubscription.closed) {\n        _get(_getPrototypeOf(SwitchMapSubscriber.prototype), \"_complete\", this).call(this);\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.innerSubscription = undefined;\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.innerSubscription = undefined;\n\n      if (this.isStopped) {\n        _get(_getPrototypeOf(SwitchMapSubscriber.prototype), \"_complete\", this).call(this);\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this.destination.next(innerValue);\n    }\n  }]);\n\n  return SwitchMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/switchMap.ts"],"names":[],"mappings":";;;;;;AAKA,SAAS,GAAT,QAAoB,OAApB;AACA,SAAS,IAAT,QAAqB,oBAArB;AACA,SAAS,qBAAT,EAAgC,qBAAhC,EAAuD,cAAvD,QAA6E,mBAA7E;AAwEA,OAAM,SAAU,SAAV,CACJ,OADI,EAEJ,cAFI,EAEyG;EAE7G,IAAI,OAAO,cAAP,KAA0B,UAA9B,EAA0C;IACxC,OAAO,UAAC,MAAD;MAAA,OAA2B,MAAM,CAAC,IAAP,CAChC,SAAS,CAAC,UAAC,CAAD,EAAI,CAAJ;QAAA,OAAU,IAAI,CAAC,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAR,CAAJ,CAAoB,IAApB,CAClB,GAAG,CAAC,UAAC,CAAD,EAAI,EAAJ;UAAA,OAAW,cAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAzB;QAAA,CAAD,CADe,CAAV;MAAA,CAAD,CADuB,CAA3B;IAAA,CAAP;EAKD;;EACD,OAAO,UAAC,MAAD;IAAA,OAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,iBAAJ,CAAsB,OAAtB,CAAZ,CAA3B;EAAA,CAAP;AACD;;IAEK,iB;EACJ,2BAAoB,OAApB,EAA4E;IAAA;;IAAxD,KAAA,OAAA,GAAA,OAAA;EACnB;;;;WAED,cAAK,UAAL,EAAgC,MAAhC,EAA2C;MACzC,OAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC,KAAK,OAAzC,CAAjB,CAAP;IACD;;;;;;IAQG,mB;;;;;EAIJ,6BAAY,WAAZ,EACoB,OADpB,EAC4E;IAAA;;IAAA;;IAC1E,0BAAM,WAAN;IADkB,MAAA,OAAA,GAAA,OAAA;IAJZ,MAAA,KAAA,GAAQ,CAAR;IAIoE;EAE3E;;;;WAES,eAAM,KAAN,EAAc;MACtB,IAAI,MAAJ;MACA,IAAM,KAAK,GAAG,KAAK,KAAL,EAAd;;MACA,IAAI;QACF,MAAM,GAAG,KAAK,OAAL,CAAa,KAAb,EAAoB,KAApB,CAAT;MACD,CAFD,CAEE,OAAO,KAAP,EAAc;QACd,KAAK,WAAL,CAAiB,KAAjB,CAAwB,KAAxB;QACA;MACD;;MACD,KAAK,SAAL,CAAe,MAAf;IACD;;;WAEO,mBAAU,MAAV,EAAoC;MAC1C,IAAM,iBAAiB,GAAG,KAAK,iBAA/B;;MACA,IAAI,iBAAJ,EAAuB;QACrB,iBAAiB,CAAC,WAAlB;MACD;;MACD,IAAM,eAAe,GAAG,IAAI,qBAAJ,CAA0B,IAA1B,CAAxB;MACA,IAAM,WAAW,GAAG,KAAK,WAAzB;MACA,WAAW,CAAC,GAAZ,CAAgB,eAAhB;MACA,KAAK,iBAAL,GAAyB,cAAc,CAAC,MAAD,EAAS,eAAT,CAAvC;;MAIA,IAAI,KAAK,iBAAL,KAA2B,eAA/B,EAAgD;QAC9C,WAAW,CAAC,GAAZ,CAAgB,KAAK,iBAArB;MACD;IACF;;;WAES,qBAAS;MACjB,IAAO,iBAAP,GAA4B,IAA5B,CAAO,iBAAP;;MACA,IAAI,CAAC,iBAAD,IAAsB,iBAAiB,CAAC,MAA5C,EAAoD;QAClD;MACD;;MACD,KAAK,WAAL;IACD;;;WAES,wBAAY;MACpB,KAAK,iBAAL,GAAyB,SAAzB;IACD;;;WAED,0BAAc;MACZ,KAAK,iBAAL,GAAyB,SAAzB;;MACA,IAAI,KAAK,SAAT,EAAoB;QAClB;MACD;IACF;;;WAED,oBAAW,UAAX,EAAwB;MACpB,KAAK,WAAL,CAAiB,IAAjB,CAAuB,UAAvB;IACH;;;;EA3DqC,qB","sourcesContent":["import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new SwitchMapOperator(project));\n}\nclass SwitchMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n}\nclass SwitchMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed) {\n            super._complete();\n        }\n        this.unsubscribe();\n    }\n    _unsubscribe() {\n        this.innerSubscription = undefined;\n    }\n    notifyComplete() {\n        this.innerSubscription = undefined;\n        if (this.isStopped) {\n            super._complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=switchMap.js.map"]},"metadata":{},"sourceType":"module"}