{"ast":null,"code":"import _get from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/momodoujammeh/Developement/angular/Assignments/prj-observable-01-finished/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license Angular v11.2.14\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵglobal, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n\n  var _super = _createSuper(GenericBrowserDomAdapter);\n\n  function GenericBrowserDomAdapter() {\n    _classCallCheck(this, GenericBrowserDomAdapter);\n\n    return _super.call(this);\n  }\n\n  _createClass(GenericBrowserDomAdapter, [{\n    key: \"supportsDOMEvents\",\n    value: function supportsDOMEvents() {\n      return true;\n    }\n  }]);\n\n  return GenericBrowserDomAdapter;\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ɵ0 = function ɵ0() {\n  if (ɵglobal['Node']) {\n    return ɵglobal['Node'].prototype.contains || function (node) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined;\n};\n\nvar nodeContains = ɵ0();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n\n  var _super2 = _createSuper(BrowserDomAdapter);\n\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BrowserDomAdapter, [{\n    key: \"getProperty\",\n    value: function getProperty(el, name) {\n      return el[name];\n    }\n  }, {\n    key: \"log\",\n    value: function log(error) {\n      if (window.console) {\n        window.console.log && window.console.log(error);\n      }\n    }\n  }, {\n    key: \"logGroup\",\n    value: function logGroup(error) {\n      if (window.console) {\n        window.console.group && window.console.group(error);\n      }\n    }\n  }, {\n    key: \"logGroupEnd\",\n    value: function logGroupEnd() {\n      if (window.console) {\n        window.console.groupEnd && window.console.groupEnd();\n      }\n    }\n  }, {\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n\n      return node;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(el) {\n      return el.value;\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n\n      if (target === 'document') {\n        return doc;\n      }\n\n      if (target === 'body') {\n        return doc.body;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getHistory\",\n    value: function getHistory() {\n      return window.history;\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      return window.location;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"performanceNow\",\n    value: function performanceNow() {\n      // performance.now() is not available in all browsers, see\n      // https://caniuse.com/high-resolution-time\n      return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n    }\n  }, {\n    key: \"supportsCookies\",\n    value: function supportsCookies() {\n      return true;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\n\nvar baseElement = null;\n\nfunction getBaseElementHref() {\n  if (!baseElement) {\n    baseElement = document.querySelector('base');\n\n    if (!baseElement) {\n      return null;\n    }\n  }\n\n  return baseElement.getAttribute('href');\n} // based on urlUtils.js in AngularJS 1\n\n\nvar urlParsingNode;\n\nfunction relativePath(url) {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n\n  urlParsingNode.setAttribute('href', url);\n  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = Array.prototype.slice.apply(document.querySelectorAll(\"style[ng-transition]\"));\n      styles.filter(function (el) {\n        return el.getAttribute('ng-transition') === transitionId;\n      }).forEach(function (el) {\n        return dom.remove(el);\n      });\n    });\n  };\n}\n\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n\n        return testability;\n      };\n\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n\n      var whenAllStable = function whenAllStable(callback\n      /** TODO #9100 */\n      ) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n\n        var decrement = function decrement(didWork_\n        /** TODO #9100 */\n        ) {\n          didWork = didWork || didWork_;\n          count--;\n\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n\n        testabilities.forEach(function (testability\n        /** TODO #9100 */\n        ) {\n          testability.whenStable(decrement);\n        });\n      };\n\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n\n      var t = registry.getTestability(elem);\n\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }], [{\n    key: \"init\",\n    value: function init() {\n      setTestabilityGetter(new BrowserGetTestability());\n    }\n  }]);\n\n  return BrowserGetTestability;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n\n    return '-' + m[1].toLowerCase();\n  });\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar ɵ0$1 = function ɵ0$1() {\n  return {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone\n  };\n};\n\nvar CORE_TOKENS = ɵ0$1();\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\n\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\n\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return function () {\n    return inspectNativeElementR2;\n  };\n}\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce(function (prev, t) {\n    return prev[t.name] = t.token, prev;\n  }, {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\n\n\nvar ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\n\nvar ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\nvar ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  function EventManager(plugins, _zone) {\n    var _this = this;\n\n    _classCallCheck(this, EventManager);\n\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /** @internal */\n\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      var plugin = this._eventNameToPlugin.get(eventName);\n\n      if (plugin) {\n        return plugin;\n      }\n\n      var plugins = this._plugins;\n\n      for (var i = 0; i < plugins.length; i++) {\n        var _plugin = plugins[i];\n\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n\n          return _plugin;\n        }\n      }\n\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n\n  return EventManager;\n}();\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n\nEventManager.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [EVENT_MANAGER_PLUGINS]\n    }]\n  }, {\n    type: NgZone\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n\n    this._doc = _doc;\n  }\n\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this2 = this;\n\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this2._stylesSet.has(style)) {\n          _this2._stylesSet.add(style);\n\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n\n  return SharedStylesHost;\n}();\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n\n  var _super3 = _createSuper(DomSharedStylesHost);\n\n  function DomSharedStylesHost(_doc) {\n    var _this3;\n\n    _classCallCheck(this, DomSharedStylesHost);\n\n    _this3 = _super3.call(this);\n    _this3._doc = _doc; // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n\n    _this3._hostNodes = new Map();\n\n    _this3._hostNodes.set(_doc.head, []);\n\n    return _this3;\n  }\n\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host, styleNodes) {\n      var _this4 = this;\n\n      styles.forEach(function (style) {\n        var styleEl = _this4._doc.createElement('style');\n\n        styleEl.textContent = style;\n        styleNodes.push(host.appendChild(styleEl));\n      });\n    }\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      var styleNodes = [];\n\n      this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n\n      this._hostNodes.set(hostNode, styleNodes);\n    }\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      var styleNodes = this._hostNodes.get(hostNode);\n\n      if (styleNodes) {\n        styleNodes.forEach(removeStyle);\n      }\n\n      this._hostNodes.delete(hostNode);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this5 = this;\n\n      this._hostNodes.forEach(function (styleNodes, hostNode) {\n        _this5._addStylesToHost(additions, hostNode, styleNodes);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._hostNodes.forEach(function (styleNodes) {\n        return styleNodes.forEach(removeStyle);\n      });\n    }\n  }]);\n\n  return DomSharedStylesHost;\n}(SharedStylesHost);\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n\nDomSharedStylesHost.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (var i = 0; i < styles.length; i++) {\n    var style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    var allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nvar hasLoggedNativeEncapsulationWarning = false;\n\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n\n            renderer.applyToHost(element);\n            return renderer;\n          }\n\n        case 1:\n        case ViewEncapsulation.ShadowDom:\n          // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n          if ((typeof ngDevMode === 'undefined' || ngDevMode) && !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n            hasLoggedNativeEncapsulationWarning = true;\n            console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n          }\n\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = flattenStyles(type.id, type.styles, []);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n\n  return DomRendererFactory2;\n}();\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n\nDomRendererFactory2.ctorParameters = function () {\n  return [{\n    type: EventManager\n  }, {\n    type: DomSharedStylesHost\n  }, {\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [APP_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n        // will result in undefined, so we just return the namespace here.\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      parent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        parent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        // TODO(FW-811): Ivy may cause issues here because it's passing around\n        // full URIs for namespaces, therefore this lookup will fail.\n        var namespaceUri = NAMESPACE_URIS[namespace];\n\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n          // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n          // which is wrong.\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n\n  return DefaultDomRenderer2;\n}();\n\nvar ɵ0$2 = function ɵ0$2() {\n  return '@'.charCodeAt(0);\n};\n\nvar AT_CHARCODE = ɵ0$2();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Found the synthetic \".concat(nameKind, \" \").concat(name, \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\"));\n  }\n}\n\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n\n  var _super4 = _createSuper(EmulatedEncapsulationDomRenderer2);\n\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this6;\n\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n\n    _this6 = _super4.call(this, eventManager);\n    _this6.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    _this6.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this6.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this6;\n  }\n\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n\n      return el;\n    }\n  }]);\n\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\n\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n\n  var _super5 = _createSuper(ShadowDomRenderer);\n\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this7;\n\n    _classCallCheck(this, ShadowDomRenderer);\n\n    _this7 = _super5.call(this, eventManager);\n    _this7.sharedStylesHost = sharedStylesHost;\n    _this7.hostEl = hostEl;\n    _this7.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n\n    _this7.sharedStylesHost.addHost(_this7.shadowRoot);\n\n    var styles = flattenStyles(component.id, component.styles, []);\n\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n\n      _this7.shadowRoot.appendChild(styleEl);\n    }\n\n    return _this7;\n  }\n\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n\n  var _super6 = _createSuper(DomEventsPlugin);\n\n  function DomEventsPlugin(doc) {\n    _classCallCheck(this, DomEventsPlugin);\n\n    return _super6.call(this, doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  _createClass(DomEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this8 = this;\n\n      element.addEventListener(eventName, handler, false);\n      return function () {\n        return _this8.removeEventListener(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n  }]);\n\n  return DomEventsPlugin;\n}(EventManagerPlugin);\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n\nDomEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n\n      return mc;\n    }\n  }]);\n\n  return HammerGestureConfig;\n}();\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin2);\n\n  var _super7 = _createSuper(HammerGesturesPlugin);\n\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this9;\n\n    _classCallCheck(this, HammerGesturesPlugin);\n\n    _this9 = _super7.call(this, doc);\n    _this9._config = _config;\n    _this9.console = console;\n    _this9.loader = loader;\n    _this9._loaderPromise = null;\n    return _this9;\n  }\n\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        }\n\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this10 = this;\n\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || this.loader(); // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n\n        var cancelRegistration = false;\n\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n\n        this._loaderPromise.then(function () {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this10.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n            }\n\n            deregister = function deregister() {};\n\n            return;\n          }\n\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to removal.\n            deregister = _this10.addEventListener(element, eventName, handler);\n          }\n        }).catch(function () {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            _this10.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n          }\n\n          deregister = function deregister() {};\n        }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n\n\n        return function () {\n          deregister();\n        };\n      }\n\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n        var mc = _this10._config.buildHammer(element);\n\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n\nHammerGesturesPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: HammerGestureConfig,\n    decorators: [{\n      type: Inject,\n      args: [HAMMER_GESTURE_CONFIG]\n    }]\n  }, {\n    type: ɵConsole\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\n\n\nvar HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\n\nvar HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\nvar HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\nvar HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n  _classCallCheck(this, HammerModule);\n});\n\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\n\nHammerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\nvar _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\nvar _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nvar ɵ0$3 = function ɵ0$3(event) {\n  return event.altKey;\n},\n    ɵ1 = function ɵ1(event) {\n  return event.ctrlKey;\n},\n    ɵ2 = function ɵ2(event) {\n  return event.metaKey;\n},\n    ɵ3 = function ɵ3(event) {\n  return event.shiftKey;\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\n\n\nvar MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$3,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin3);\n\n  var _super8 = _createSuper(KeyEventsPlugin);\n\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n\n    return _super8.call(this, doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      var parts = eventName.toLowerCase().split('.');\n      var domEventName = parts.shift();\n\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n\n      var key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n      var fullKey = '';\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        var index = parts.indexOf(modifierName);\n\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n\n\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n  }, {\n    key: \"getEventFullKey\",\n    value: function getEventFullKey(event) {\n      var fullKey = '';\n      var key = getEventKey(event);\n      key = key.toLowerCase();\n\n      if (key === ' ') {\n        key = 'space'; // for readability\n      } else if (key === '.') {\n        key = 'dot'; // because '.' is used as a separator in event names\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName != key) {\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n          if (modifierGetter(event)) {\n            fullKey += modifierName + '.';\n          }\n        }\n      });\n      fullKey += key;\n      return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event\n      /** TODO #9100 */\n      ) {\n        if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /** @internal */\n\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n\n        default:\n          return keyName;\n      }\n    }\n  }]);\n\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n\nKeyEventsPlugin.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction getEventKey(event) {\n  var key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nvar DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n});\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    }]\n  }], null, null);\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n\n  var _super9 = _createSuper(DomSanitizerImpl);\n\n  function DomSanitizerImpl(_doc) {\n    var _this11;\n\n    _classCallCheck(this, DomSanitizerImpl);\n\n    _this11 = _super9.call(this);\n    _this11._doc = _doc;\n    return _this11;\n  }\n\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n          /* Html */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n          /* Style */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return value;\n\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n          /* Script */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a script context');\n\n        case SecurityContext.URL:\n          var type = ɵgetSanitizationBypassType(value);\n\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n          /* Url */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          return ɵ_sanitizeUrl(String(value));\n\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n          /* ResourceUrl */\n          )) {\n            return ɵunwrapSafeValue(value);\n          }\n\n          throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see https://g.co/ng/security#xss)\"));\n      }\n    }\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n  }]);\n\n  return DomSanitizerImpl;\n}(DomSanitizer);\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\n\nDomSanitizerImpl.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nvar ɵ0$4 = ɵPLATFORM_BROWSER_ID;\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$4\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\nvar BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\nvar BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\n\nvar BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nvar BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nvar BrowserModule = /*#__PURE__*/function () {\n  function BrowserModule(parentModule) {\n    _classCallCheck(this, BrowserModule);\n\n    if (parentModule) {\n      throw new Error(\"BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n\n  return BrowserModule;\n}();\n\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n};\n\nBrowserModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n\nBrowserModule.ctorParameters = function () {\n  return [{\n    type: BrowserModule,\n    decorators: [{\n      type: Optional\n    }, {\n      type: SkipSelf\n    }, {\n      type: Inject,\n      args: [BrowserModule]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function exports() {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: BrowserModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nvar Meta = /*#__PURE__*/function () {\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this12 = this;\n\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this12._getOrCreateElement(tag, forceCreation));\n        }\n\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n\n      var list\n      /*NodeList*/\n      = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      var meta = this.getTag(selector);\n\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!forceCreation) {\n        var selector = this._parseSelector(meta);\n\n        var elem = this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n\n        if (elem && this._containsAttributes(meta, elem)) return elem;\n      }\n\n      var element = this._dom.createElement('meta');\n\n      this._setMetaElementAttributes(meta, element);\n\n      var head = this._doc.getElementsByTagName('head')[0];\n\n      head.appendChild(element);\n      return element;\n    }\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this13 = this;\n\n      Object.keys(tag).forEach(function (prop) {\n        return el.setAttribute(_this13._getMetaKeyMap(prop), tag[prop]);\n      });\n      return el;\n    }\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this14 = this;\n\n      return Object.keys(tag).every(function (key) {\n        return elem.getAttribute(_this14._getMetaKeyMap(key)) === tag[key];\n      });\n    }\n  }, {\n    key: \"_getMetaKeyMap\",\n    value: function _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n  }]);\n\n  return Meta;\n}();\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n\nMeta.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nvar Title = /*#__PURE__*/function () {\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n  }]);\n\n  return Title;\n}();\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n\nTitle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n      var isProfilerAvailable = win.console.profile != null;\n\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n\n      var start = ɵgetDOM().performanceNow();\n      var numTicks = 0;\n\n      while (numTicks < 5 || ɵgetDOM().performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n\n      var end = ɵgetDOM().performanceNow();\n\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n\n  return AngularProfiler;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\n\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /** @internal */\n\n\n  _createClass(TransferState, [{\n    key: \"get\",\n    value:\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    function get(key, defaultValue) {\n      return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n\n      return JSON.stringify(this.store);\n    }\n  }], [{\n    key: \"init\",\n    value: function init(initState) {\n      var transferState = new TransferState();\n      transferState.store = initState;\n      return transferState;\n    }\n  }]);\n\n  return TransferState;\n}();\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nvar BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n});\n\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\n\nBrowserTransferStateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n\n  return By;\n}();\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nvar VERSION = new Version('11.2.14');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"sources":["../../../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../../packages/platform-browser/src/browser/browser_adapter.ts","../../../../../../packages/platform-browser/src/browser/server-transition.ts","../../../../../../packages/platform-browser/src/browser/testability.ts","../../../../../../packages/platform-browser/src/dom/util.ts","../../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","../../../../../../packages/platform-browser/src/dom/events/event_manager.ts","../../../../../../packages/platform-browser/src/dom/shared_styles_host.ts","../../../../../../packages/platform-browser/src/dom/dom_renderer.ts","../../../../../../packages/platform-browser/src/dom/events/dom_events.ts","../../../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","../../../../../../packages/platform-browser/src/dom/events/key_events.ts","../../../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","../../../../../../packages/platform-browser/src/browser.ts","../../../../../../packages/platform-browser/src/browser/meta.ts","../../../../../../packages/platform-browser/src/browser/title.ts","../../../../../../packages/platform-browser/src/browser/tools/browser.ts","../../../../../../packages/platform-browser/src/browser/tools/common_tools.ts","../../../../../../packages/platform-browser/src/browser/tools/tools.ts","../../../../../../packages/platform-browser/src/browser/transfer_state.ts","../../../../../../packages/platform-browser/src/dom/debug/by.ts","../../../../../../packages/platform-browser/src/private_export.ts","../../../../../../packages/platform-browser/src/version.ts","../../../../../../packages/platform-browser/src/platform-browser.ts","../../../../../../packages/platform-browser/public_api.ts","../../../../../../packages/platform-browser/index.ts","../../../../../../packages/platform-browser/platform-browser.ts"],"names":["DomAdapter","global","setRootDomAdapter","parseCookieValue","getDOM","Console","allowSanitizationBypassOrThrow","unwrapSafeValue","_sanitizeHtml","getSanitizationBypassType","_sanitizeUrl","bypassSanitizationTrustHtml","bypassSanitizationTrustStyle","bypassSanitizationTrustScript","bypassSanitizationTrustUrl","bypassSanitizationTrustResourceUrl","PLATFORM_BROWSER_ID","INJECTOR_SCOPE","window"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter} from '@angular/common';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  constructor() {\n    super();\n  }\n\n  supportsDOMEvents(): boolean {\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵparseCookieValue as parseCookieValue, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\nimport {ɵglobal as global} from '@angular/core';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst nodeContains: (this: Node, other: Node) => boolean = (() => {\n  if (global['Node']) {\n    return global['Node'].prototype.contains || function(this: Node, node: any) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined as any;\n})();\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    setRootDomAdapter(new BrowserDomAdapter());\n  }\n  getProperty(el: Node, name: string): any {\n    return (<any>el)[name];\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n  dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n  }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  getValue(el: any): string {\n    return el.value;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document {\n    return document;\n  }\n\n  isElementNode(node: Node): boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node: any): boolean {\n    return node instanceof DocumentFragment;\n  }\n\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History {\n    return window.history;\n  }\n  getLocation(): Location {\n    return window.location;\n  }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void {\n    baseElement = null;\n  }\n  getUserAgent(): string {\n    return window.navigator.userAgent;\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // https://caniuse.com/high-resolution-time\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean {\n    return true;\n  }\n\n  getCookie(name: string): string|null {\n    return parseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base')!;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n      styles.filter(el => el.getAttribute('ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {GetTestability, setTestabilityGetter, Testability, TestabilityRegistry, ɵglobal as global} from '@angular/core';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, (<any>elem).host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as {[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationRef, DebugNode, NgProbeToken, NgZone, Optional, Provider, ɵgetDebugNodeR2} from '@angular/core';\n\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = (() => ({\n                       'ApplicationRef': ApplicationRef,\n                       'NgZone': NgZone,\n                     }))();\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElementR2(element: any): DebugNode|null {\n  return ɵgetDebugNodeR2(element);\n}\n\nexport function _createNgProbeR2(coreTokens: NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElementR2;\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nexport const ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: _createNgProbeR2,\n    deps: [\n      [NgProbeToken, new Optional()],\n    ],\n    multi: true,\n  },\n];\n\nexport const ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager!: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] {\n    return Array.from(this._stylesSet);\n  }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n  private _hostNodes = new Map<Node, Node[]>();\n\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.set(_doc.head, []);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node, styleNodes: Node[]): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      styleNodes.push(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    const styleNodes: Node[] = [];\n    this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n    this._hostNodes.set(hostNode, styleNodes);\n  }\n\n  removeHost(hostNode: Node): void {\n    const styleNodes = this._hostNodes.get(hostNode);\n    if (styleNodes) {\n      styleNodes.forEach(removeStyle);\n    }\n    this._hostNodes.delete(hostNode);\n  }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach((styleNodes, hostNode) => {\n      this._addStylesToHost(additions, hostNode, styleNodes);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n  }\n}\n\nfunction removeStyle(styleNode: Node): void {\n  getDOM().remove(styleNode);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return (event: any) => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nlet hasLoggedNativeEncapsulationWarning = false;\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case 1:\n      case ViewEncapsulation.ShadowDom:\n        // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n          hasLoggedNativeEncapsulationWarning = true;\n          console.warn(\n              'ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n        }\n\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any {\n    return document.createComment(value);\n  }\n\n  createText(value: string): any {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    parent.appendChild(newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any {\n    return node.parentNode;\n  }\n\n  nextSibling(node: any): any {\n    return node.nextSibling;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void {\n    el.classList.add(name);\n  }\n\n  removeClass(el: any, name: string): void {\n    el.classList.remove(name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void {\n    node.nodeValue = value;\n  }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as () => void;\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Found the synthetic ${nameKind} ${\n        name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, component: RendererType2) {\n    super(eventManager);\n    this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean {\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as EventListener, false);\n    return () => this.removeEventListener(element, eventName, handler as EventListener);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    return target.removeEventListener(eventName, callback as EventListener);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgModule, Optional, Provider, ɵConsole as Console} from '@angular/core';\n\nimport {EVENT_MANAGER_PLUGINS, EventManagerPlugin} from './event_manager';\n\n\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   *\n   */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any;\n    domEvents?: boolean;\n    enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer!(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  private _loaderPromise: Promise<void>|null = null;\n\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(\n            `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n            `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || this.loader();\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n      };\n\n      this._loaderPromise\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(\n                    `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              }\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              this.console.warn(\n                  `The \"${eventName}\" event cannot be bound because the custom ` +\n                  `Hammer.JS loader failed.`);\n            }\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\n\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nexport const HAMMER_PROVIDERS__POST_R3__ = [];\n\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nexport const HAMMER_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n];\n\nexport const HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n@NgModule({providers: HAMMER_PROVIDERS__PRE_R3__})\nexport class HammerModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName)!;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {fullKey: string, domEventName: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop()!);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result: {fullKey: string, domEventName: string} = {} as any;\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n\nfunction getEventKey(event: any): string {\n  let key = event.key;\n  if (key == null) {\n    key = event.keyIdentifier;\n    // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n    if (key == null) {\n      return 'Unidentified';\n    }\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = (_chromeNumKeyPadMap as any)[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {forwardRef, Inject, Injectable, Injector, Sanitizer, SecurityContext, ɵ_sanitizeHtml as _sanitizeHtml, ɵ_sanitizeUrl as _sanitizeUrl, ɵallowSanitizationBypassAndThrow as allowSanitizationBypassOrThrow, ɵbypassSanitizationTrustHtml as bypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl as bypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript as bypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle as bypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl as bypassSanitizationTrustUrl, ɵBypassType as BypassType, ɵgetSanitizationBypassType as getSanitizationBypassType, ɵunwrapSafeValue as unwrapSafeValue} from '@angular/core';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)})\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\nexport function domSanitizerImplFactory(injector: Injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\n@Injectable({providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector]})\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n  }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Style)) {\n          return unwrapSafeValue(value);\n        }\n        return value as string;\n      case SecurityContext.SCRIPT:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Script)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        const type = getSanitizationBypassType(value);\n        if (allowSanitizationBypassOrThrow(value, BypassType.Url)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.ResourceUrl)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error(\n            'unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml {\n    return bypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value: string): SafeStyle {\n    return bypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value: string): SafeScript {\n    return bypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value: string): SafeUrl {\n    return bypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return bypassSanitizationTrustResourceUrl(value);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, createPlatformFactory, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, platformCore, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, ɵConsole as Console, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵsetDocument} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_PROVIDERS} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: INJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  HAMMER_PROVIDERS,\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵDomAdapter as DomAdapter, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n/**\n * Represents the attributes of an HTML `<meta>` element. The element itself is\n * represented by the internal `HTMLMetaElement`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see `Meta`\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string;\n  content?: string;\n  httpEquiv?: string;\n  id?: string;\n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}&{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nexport function createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    this._dom = getDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector)!;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector: string): void {\n    this.removeTagElement(this.getTag(attrSelector)!);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      const elem: HTMLMetaElement = this.getTag(selector)!;\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach(\n        (prop: string) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every(\n        (key: string) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  private _getMetaKeyMap(prop: string): string {\n    return META_KEYS_MAP[prop] || prop;\n  }\n}\n\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP: {[prop: string]: string;} = {\n  httpEquiv: 'http-equiv'\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) {\n    this._doc.title = newTitle || '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = getDOM().performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_ID, Injectable, NgModule} from '@angular/core';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string&{__not_a_string: never};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable()\nexport class TransferState {\n  private store: {[k: string]: {}|undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => {} | undefined} = {};\n\n  /** @internal */\n  static init(initState: {}) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void {\n    this.store[key] = value;\n  }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void {\n    delete this.store[key];\n  }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) {\n    return this.store.hasOwnProperty(key);\n  }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function initTransferState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent)) as {};\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [{provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID]}],\n})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens!.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n: any, selector: string): boolean {\n  if (getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n        n.msMatchesSelector && n.msMatchesSelector(selector) ||\n        n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {ɵgetDOM} from '@angular/common';\nexport {BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, initDomAdapter as ɵinitDomAdapter, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS} from './browser';\nexport {BrowserDomAdapter as ɵBrowserDomAdapter} from './browser/browser_adapter';\nexport {TRANSITION_ID as ɵTRANSITION_ID} from './browser/server-transition';\nexport {BrowserGetTestability as ɵBrowserGetTestability} from './browser/testability';\nexport {escapeHtml as ɵescapeHtml} from './browser/transfer_state';\nexport {ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {DomRendererFactory2 as ɵDomRendererFactory2, flattenStyles as ɵflattenStyles, NAMESPACE_URIS as ɵNAMESPACE_URIS, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute} from './dom/dom_renderer';\nexport {DomEventsPlugin as ɵDomEventsPlugin} from './dom/events/dom_events';\nexport {HammerGesturesPlugin as ɵHammerGesturesPlugin} from './dom/events/hammer_gestures';\nexport {KeyEventsPlugin as ɵKeyEventsPlugin} from './dom/events/key_events';\nexport {DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost} from './dom/shared_styles_host';\nexport {DomSanitizerImpl as ɵDomSanitizerImpl} from './security/dom_sanitization_service';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('11.2.14');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {BrowserModule, platformBrowser} from './browser';\nexport {Meta, MetaDefinition} from './browser/meta';\nexport {Title} from './browser/title';\nexport {disableDebugTools, enableDebugTools} from './browser/tools/tools';\nexport {BrowserTransferStateModule, makeStateKey, StateKey, TransferState} from './browser/transfer_state';\nexport {By} from './dom/debug/by';\nexport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nexport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGestureConfig, HammerLoader, HammerModule} from './dom/events/hammer_gestures';\nexport {DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl, SafeValue} from './security/dom_sanitization_service';\n\nexport * from './private_export';\nexport {VERSION} from './version';\n// This must be exported so it doesn't get tree-shaken away prematurely\nexport {ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__} from './dom/debug/ng_probe';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/platform-browser';\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c,_document as ɵangular_packages_platform_browser_platform_browser_b,errorHandler as ɵangular_packages_platform_browser_platform_browser_a} from './src/browser';\nexport {GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o} from './src/browser/generic_browser_adapter';\nexport {createMeta as ɵangular_packages_platform_browser_platform_browser_d} from './src/browser/meta';\nexport {SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l,appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k} from './src/browser/server-transition';\nexport {createTitle as ɵangular_packages_platform_browser_platform_browser_e} from './src/browser/title';\nexport {initTransferState as ɵangular_packages_platform_browser_platform_browser_f} from './src/browser/transfer_state';\nexport {ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n,_createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m} from './src/dom/debug/ng_probe';\nexport {EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g} from './src/dom/events/event_manager';\nexport {HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i,HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h} from './src/dom/events/hammer_gestures';\nexport {domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j} from './src/security/dom_sanitization_service';"]},"metadata":{},"sourceType":"module"}